<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>学习笔记03</title>
      <link href="/2020/02/27/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B003/"/>
      <url>/2020/02/27/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B003/</url>
      
        <content type="html"><![CDATA[<h2 id="简单神经网络的param计算"><a class="markdownIt-Anchor" href="#简单神经网络的param计算"></a> 简单神经网络的Param计算</h2><p>搭建用于MNIST的简单神经网络</p><p>代码如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">model = keras.Sequential()</span><br><span class="line"></span><br><span class="line">model.add(keras.layers.Flatten(input_shape=(<span class="number">28</span>,<span class="number">28</span>)))</span><br><span class="line">model.add(keras.layers.Dense(<span class="number">512</span>, activation=<span class="string">'relu'</span>))</span><br><span class="line">model.add(keras.layers.Dense(<span class="number">256</span>, activation=<span class="string">'relu'</span>))</span><br><span class="line">model.add(keras.layers.Dense(<span class="number">128</span>, activation=<span class="string">'relu'</span>))</span><br><span class="line">model.add(keras.layers.Dense(<span class="number">10</span>, activation=<span class="string">'softmax'</span>))</span><br></pre></td></tr></table></figure><p>参数输出如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">Model: &quot;sequential&quot;</span><br><span class="line">_________________________________________________________________</span><br><span class="line">Layer (type)                 Output Shape              Param #   </span><br><span class="line">&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;</span><br><span class="line">flatten (Flatten)            (None, 784)               0         </span><br><span class="line">_________________________________________________________________</span><br><span class="line">dense (Dense)                (None, 512)               401920    </span><br><span class="line">_________________________________________________________________</span><br><span class="line">dense_1 (Dense)              (None, 256)               131328    </span><br><span class="line">_________________________________________________________________</span><br><span class="line">dense_2 (Dense)              (None, 128)               32896     </span><br><span class="line">_________________________________________________________________</span><br><span class="line">dense_3 (Dense)              (None, 10)                1290      </span><br><span class="line">&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;</span><br><span class="line">Total params: 567,434</span><br><span class="line">Trainable params: 567,434</span><br><span class="line">Non-trainable params: 0</span><br></pre></td></tr></table></figure><p>该网络由Flatten作为输入层，主要作用是将二维数据“压平”为一维数据，即28*28—&gt;&gt; 1*784。其余四层为Dense层，除去输出层采用softmax为激活函数外，其他层均采用relu激活函数。</p><p>其参数的计算如下：</p><p>Param = (输入数据的Feature个数+1)*神经元的个数<br />+1操作，是因为每个神经元都有一个bias偏置</p><p>第一层：Flatten层由于只是将二维数据展平为一维的，不涉及参数<br />第二层：(784+1)*512=401920  经过第二层处理后，产生512个Feature<br />第三层：(512+1)*256=131328  经过第二层处理后，产生256个Feature<br />第四层：(256+1)*128=32896  经过第二层处理后，产生128个Feature<br />第五层：(128+1)*10=1290  经过第二层处理后，产生10个Feature</p><h2 id="含卷积层的param计算"><a class="markdownIt-Anchor" href="#含卷积层的param计算"></a> 含卷积层的Param计算</h2><p>搭建简单含有2个卷积2个池化层2了全连接层的卷积神经网络</p><p>代码如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">model = keras.Sequential()</span><br><span class="line"></span><br><span class="line">model.add(</span><br><span class="line">    keras.layers.Conv2D(</span><br><span class="line">        filters=<span class="number">512</span>,</span><br><span class="line">        kernel_size=(<span class="number">5</span>, <span class="number">5</span>),</span><br><span class="line">        strides=(<span class="number">1</span>, <span class="number">1</span>),</span><br><span class="line">        padding=<span class="string">'same'</span>,</span><br><span class="line">        activation=<span class="string">'relu'</span>,</span><br><span class="line">        input_shape=(<span class="number">128</span>, <span class="number">128</span>, <span class="number">3</span>),</span><br><span class="line">        name=<span class="string">"Conv_1"</span>))</span><br><span class="line"></span><br><span class="line">model.add(keras.layers.MaxPool2D(pool_size=(<span class="number">3</span>, <span class="number">3</span>), strides=(<span class="number">2</span>, <span class="number">2</span>), name=<span class="string">"Pool_1"</span>))</span><br><span class="line"></span><br><span class="line">model.add(</span><br><span class="line">    keras.layers.Conv2D(</span><br><span class="line">        filters=<span class="number">256</span>,</span><br><span class="line">        kernel_size=(<span class="number">3</span>, <span class="number">3</span>),</span><br><span class="line">        strides=(<span class="number">2</span>, <span class="number">2</span>),</span><br><span class="line">        padding=<span class="string">'valid'</span>,</span><br><span class="line">        activation=<span class="string">'relu'</span>,</span><br><span class="line">        name=<span class="string">"Conv_2"</span>))</span><br><span class="line"></span><br><span class="line">model.add(keras.layers.MaxPool2D(pool_size=(<span class="number">3</span>, <span class="number">3</span>), strides=(<span class="number">2</span>, <span class="number">2</span>), name=<span class="string">"Pool_2"</span>))</span><br><span class="line"></span><br><span class="line">model.add(keras.layers.Flatten())</span><br><span class="line"></span><br><span class="line">model.add(keras.layers.Dense(units=<span class="number">128</span>, activation=<span class="string">"relu"</span>, name=<span class="string">"Dense_1"</span>))</span><br><span class="line"></span><br><span class="line">model.add(keras.layers.Dense(units=<span class="number">10</span>, activation=<span class="string">"softmax"</span>, name=<span class="string">"Dense_2"</span>))</span><br><span class="line"></span><br><span class="line">model.summary()</span><br></pre></td></tr></table></figure><p>参数输出如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">Model: &quot;sequential&quot;</span><br><span class="line">_________________________________________________________________</span><br><span class="line">Layer (type)                 Output Shape              Param #   </span><br><span class="line">&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;</span><br><span class="line">Conv_1 (Conv2D)              (None, 128, 128, 512)     38912     </span><br><span class="line">_________________________________________________________________</span><br><span class="line">Pool_1 (MaxPooling2D)        (None, 63, 63, 512)       0         </span><br><span class="line">_________________________________________________________________</span><br><span class="line">Conv_2 (Conv2D)              (None, 31, 31, 256)       1179904   </span><br><span class="line">_________________________________________________________________</span><br><span class="line">Pool_2 (MaxPooling2D)        (None, 15, 15, 256)       0         </span><br><span class="line">_________________________________________________________________</span><br><span class="line">flatten (Flatten)            (None, 57600)             0         </span><br><span class="line">_________________________________________________________________</span><br><span class="line">Dense_1 (Dense)              (None, 128)               7372928   </span><br><span class="line">_________________________________________________________________</span><br><span class="line">Dense_2 (Dense)              (None, 10)                1290      </span><br><span class="line">&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;</span><br><span class="line">Total params: 8,593,034</span><br><span class="line">Trainable params: 8,593,034</span><br><span class="line">Non-trainable params: 0</span><br></pre></td></tr></table></figure><p>计算公式如下:</p><p>WC=卷积层的weights数量</p><p>BC=卷积层的biases数量</p><p>PC=所有参数的数量</p><p>K=核尺寸</p><p>N=核数量</p><p>C =输入图像通道数</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>W</mi><mi>C</mi><mo>=</mo><msup><mi>K</mi><mn>2</mn></msup><mo>∗</mo><mi>C</mi><mo>∗</mo><mi>N</mi></mrow><annotation encoding="application/x-tex">WC=K^2\ast{C}\ast{N}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">W</span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8641079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">K</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">C</span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">N</span></span></span></span></span></span></p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>B</mi><mi>C</mi><mo>=</mo><mi>N</mi></mrow><annotation encoding="application/x-tex">BC=N</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span></span></span></span></span></p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>P</mi><mi>C</mi><mo>=</mo><mi>W</mi><mi>C</mi><mo>+</mo><mi>B</mi><mi>C</mi></mrow><annotation encoding="application/x-tex">PC=WC+BC</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">W</span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span></span></span></span></span></p><p>第一层：输入图片为128*128*3，RGB图片，共有512个卷积核，每个卷积核为5*5*3，卷积核尺寸为5。因此：第一层卷积层共有参数5^2*3*512+512=38912<br />第三层：输入为63*63*512, 共有256个卷积核，每个卷积核为3*3*512，卷积核尺寸为3。因此：第三层卷积层共有参数3^2*512*256+256=1179904</p><h2 id="其他相关计算"><a class="markdownIt-Anchor" href="#其他相关计算"></a> 其他相关计算：</h2><p>有关上述卷积网络输出图片大小的计算</p><p>计算方法如下：</p><p>O=输出图像的尺寸</p><p>I=输入图像的尺寸</p><p>K=卷积层的核尺寸</p><p>Kp=池化层的核尺寸</p><p>N=核数量</p><p>S=移动步长</p><p>P =填充数</p><p><strong>卷积层</strong><br />基本公式（向上取整）</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>O</mi><mo>=</mo><mfrac><mrow><mi>I</mi><mo>−</mo><mi>K</mi><mo>+</mo><mn>2</mn><mi>P</mi></mrow><mi>S</mi></mfrac><mo>+</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">O=\frac{I-K+2P}S+1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">O</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.04633em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.36033em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07847em;">I</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault" style="margin-right:0.07153em;">K</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord">2</span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span></span></p><p>padding='same’时：</p><p>卷积后的图片尺寸和原尺寸一样，故P值将随着输入，输出，S，K共同决定。</p><p>此时：O = I，基本公式不变</p><p>padding='valid’时：</p><p>P = 0</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>O</mi><mo>=</mo><mfrac><mrow><mi>I</mi><mo>−</mo><mi>K</mi></mrow><mi>S</mi></mfrac><mo>+</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">O=\frac{I-K}S+1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">O</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.04633em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.36033em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07847em;">I</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault" style="margin-right:0.07153em;">K</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span></span></p><p><strong>池化层</strong><br />基本公式（向下取整）</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>O</mi><mo>=</mo><mfrac><mrow><mi>I</mi><mo>−</mo><mi>K</mi><mi>p</mi></mrow><mi>S</mi></mfrac><mo>+</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">O=\frac{I-Kp}S+1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">O</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.0463299999999998em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3603299999999998em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07847em;">I</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault" style="margin-right:0.07153em;">K</span><span class="mord mathdefault">p</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span></span></p><p>第一层：输入图片为128*128*3，RGB图片，共有512个卷积核，每个卷积核为5*5*3，padding=‘same’。因此：第一层卷积层输出128*128*512<br />第二层：输入为128*128*512，池化核3*3*512，步长2，因此：<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>O</mi><mo>=</mo><mfrac><mrow><mn>128</mn><mo>−</mo><mn>3</mn></mrow><mn>2</mn></mfrac><mo>+</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">O=\frac{128-3}2+1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">O</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.190108em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mord mtight">2</span><span class="mord mtight">8</span><span class="mbin mtight">−</span><span class="mord mtight">3</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span>，输出63*63*512<br />第三层：输入 63*63*512，共有256个卷积核，每个卷积核为3*3*512，padding=‘valid’，滑动步长为2，因此：<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>O</mi><mo>=</mo><mfrac><mrow><mn>63</mn><mo>−</mo><mn>3</mn></mrow><mn>2</mn></mfrac><mo>+</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">O=\frac{63-3}2+1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">O</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.190108em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">6</span><span class="mord mtight">3</span><span class="mbin mtight">−</span><span class="mord mtight">3</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span>，输出31*31*256<br />第四层：输入31*31*256，池化核3*3*512，步长2，因此：<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>O</mi><mo>=</mo><mfrac><mrow><mn>31</mn><mo>−</mo><mn>3</mn></mrow><mn>2</mn></mfrac><mo>+</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">O=\frac{31-3}2+1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">O</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.190108em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">3</span><span class="mord mtight">1</span><span class="mbin mtight">−</span><span class="mord mtight">3</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span>，输出15*15*256<br />第五层：展平，15*15*256----&gt;&gt;1*57600<br />第六层：全连接层，与自定义神经元个数相同<br />第七层：全连接层，与自定义神经元个数相同</p>]]></content>
      
      
      <categories>
          
          <category> 计算机视觉 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> tf.keras </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>学习，永无止境</title>
      <link href="/2020/02/07/%E5%AD%A6%E4%B9%A0%EF%BC%8C%E6%B0%B8%E6%97%A0%E6%AD%A2%E5%A2%83/"/>
      <url>/2020/02/07/%E5%AD%A6%E4%B9%A0%EF%BC%8C%E6%B0%B8%E6%97%A0%E6%AD%A2%E5%A2%83/</url>
      
        <content type="html"><![CDATA[<h1 id="大一下主要课程"><a class="markdownIt-Anchor" href="#大一下主要课程"></a> 大一下主要课程</h1><ol><li>大学英语二级（A）</li><li>高等数学(理一2)</li><li>线性代数</li><li>大学物理（理三1）</li><li>高级语言程序设计II</li><li>离散数学</li></ol><p>学习！ 永无止境！！！</p><h1 id="相关学习网站也欢迎同学们继续补充"><a class="markdownIt-Anchor" href="#相关学习网站也欢迎同学们继续补充"></a> 相关学习网站（也欢迎同学们继续补充）</h1><h2 id="综合性其他"><a class="markdownIt-Anchor" href="#综合性其他"></a> 综合性&amp;其他</h2><ol><li><a href="https://www.bilibili.com/" target="_blank" rel="noopener">Bilibili</a> 推荐</li><li><a href="https://www.icourse163.org/" target="_blank" rel="noopener">中国大学慕课</a> 推荐</li><li><a href="https://study.163.com/" target="_blank" rel="noopener">网易云课堂</a></li><li><a href="https://www.51zxw.net/" target="_blank" rel="noopener">我要自学网</a></li><li><a href="https://open.163.com/" target="_blank" rel="noopener">网易公开课</a></li><li><a href="https://ke.youdao.com/" target="_blank" rel="noopener">有道精品课</a></li><li><a href="https://www.kaochong.com/" target="_blank" rel="noopener">考虫</a></li></ol><h2 id="技术性"><a class="markdownIt-Anchor" href="#技术性"></a> 技术性</h2><ol><li><a href="https://www.runoob.com/" target="_blank" rel="noopener">菜鸟教程</a></li><li><a href="https://www.liaoxuefeng.com/" target="_blank" rel="noopener">廖雪峰的官方网站</a></li><li><a href="https://www.w3school.com.cn/" target="_blank" rel="noopener">W3school</a></li><li><a href="https://www.imooc.com/" target="_blank" rel="noopener">慕课网</a></li><li><a href="https://www.nowcoder.com/" target="_blank" rel="noopener">牛客网</a></li></ol><h1 id="大一下课程视频链接"><a class="markdownIt-Anchor" href="#大一下课程视频链接"></a> 大一下课程视频链接</h1><ol><li><a href="https://space.bilibili.com/408433491/video" target="_blank" rel="noopener">高数叔的百宝箱</a> 推荐</li><li><a href="https://space.bilibili.com/67907025" target="_blank" rel="noopener">猴博士爱讲课</a></li><li><a href="https://www.bilibili.com/video/av29971113" target="_blank" rel="noopener">线性代数</a></li><li><a href="https://www.bilibili.com/video/av18896337" target="_blank" rel="noopener">离散数学</a></li><li><a href="https://www.bilibili.com/video/av15267247" target="_blank" rel="noopener">C语言</a> 推荐</li><li><a href="https://www.bilibili.com/read/cv3567765" target="_blank" rel="noopener">Java</a></li></ol>]]></content>
      
      
      <categories>
          
          <category> 404找不到 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>pip国内镜像源</title>
      <link href="/2020/01/26/pip%E5%9B%BD%E5%86%85%E9%95%9C%E5%83%8F%E6%BA%90/"/>
      <url>/2020/01/26/pip%E5%9B%BD%E5%86%85%E9%95%9C%E5%83%8F%E6%BA%90/</url>
      
        <content type="html"><![CDATA[<p>清华[推荐]：<a href="https://pypi.tuna.tsinghua.edu.cn/simple" target="_blank" rel="noopener">https://pypi.tuna.tsinghua.edu.cn/simple</a></p><p>阿里云[推荐]：<a href="https://mirrors.aliyun.com/pypi/simple/" target="_blank" rel="noopener">https://mirrors.aliyun.com/pypi/simple/</a></p><p>中国科技大学 <a href="https://pypi.mirrors.ustc.edu.cn/simple/" target="_blank" rel="noopener">https://pypi.mirrors.ustc.edu.cn/simple/</a></p><p>豆瓣：<a href="https://pypi.douban.com/simple/" target="_blank" rel="noopener">https://pypi.douban.com/simple/</a></p><p>临时使用：</p><p>可以在使用pip的时候加参数-i <a href="https://pypi.tuna.tsinghua.edu.cn/simple" target="_blank" rel="noopener">https://pypi.tuna.tsinghua.edu.cn/simple</a></p><p>例如：pip install matplotlib -i <a href="https://pypi.tuna.tsinghua.edu.cn/simple" target="_blank" rel="noopener">https://pypi.tuna.tsinghua.edu.cn/simple</a></p><p>这样就会从清华这边的镜像去安装matplotlib库。</p>]]></content>
      
      
      <categories>
          
          <category> 资源导航 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> pip </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>学习笔记02</title>
      <link href="/2020/01/23/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B002/"/>
      <url>/2020/01/23/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B002/</url>
      
        <content type="html"><![CDATA[<p><strong>Keras中文API地址：<a href="https://keras.io/zh/" target="_blank" rel="noopener">https://keras.io/zh/</a></strong></p><p><strong>tensorflow2中文教程：<a href="https://github.com/czy36mengfei/tensorflow2_tutorials_chinese" target="_blank" rel="noopener">https://github.com/czy36mengfei/tensorflow2_tutorials_chinese</a></strong></p><p><strong>tensorflow官方教程：<a href="https://tensorflow.google.cn/tutorials" target="_blank" rel="noopener">https://tensorflow.google.cn/tutorials</a></strong></p><h3 id="损失函数参数"><a class="markdownIt-Anchor" href="#损失函数参数"></a> 损失函数参数</h3><p><strong>loss=‘sparse_categorical_crossentropy’,</strong><br />与<br /><strong>loss=‘categorical_crossentropy’,</strong></p><p>如果你的 targets 是 one-hot 编码，categorical_crossentropy<br />one-hot 编码：[0, 0, 1], [1, 0, 0], [0, 1, 0]<br />如果你的 tagets 是 数字编码 ，用 sparse_categorical_crossentropy<br />数字编码：2, 0, 1</p><h3 id="modelfit函数"><a class="markdownIt-Anchor" href="#modelfit函数"></a> model.fit()函数</h3><p>model = keras.models.Sequential()<br />以给定数量的轮次（数据集上的迭代）训练模型。</p><p>函数原型：<br /><strong>fit(x=None, y=None, batch_size=None, epochs=1, verbose=1, callbacks=None, validation_split=0.0, validation_data=None, shuffle=True, class_weight=None, sample_weight=None, initial_epoch=0, steps_per_epoch=None, validation_steps=None)</strong></p><p><strong>参数</strong></p><p><strong>x</strong>: 训练数据的 Numpy 数组（如果模型只有一个输入）， 或者是 Numpy 数组的列表（如果模型有多个输入）。 如果模型中的输入层被命名，你也可以传递一个字典，将输入层名称映射到 Numpy 数组。 如果从本地框架张量馈送（例如 TensorFlow 数据张量）数据，x 可以是 None（默认）。<br /><strong>y</strong>: 目标（标签）数据的 Numpy 数组（如果模型只有一个输出）， 或者是 Numpy 数组的列表（如果模型有多个输出）。 如果模型中的输出层被命名，你也可以传递一个字典，将输出层名称映射到 Numpy 数组。 如果从本地框架张量馈送（例如 TensorFlow 数据张量）数据，y 可以是 None（默认）。<br /><strong>batch_size</strong>: 整数或 None。每次梯度更新的样本数。如果未指定，默认为 32。<br /><strong>epochs</strong>: 整数。训练模型迭代轮次。一个轮次是在整个 x 和 y 上的一轮迭代。 请注意，与 initial_epoch 一起，epochs 被理解为 「最终轮次」。模型并不是训练了 epochs 轮，而是到第 epochs 轮停止训练。<br /><strong>verbose</strong>: 0, 1 或 2。日志显示模式。 0 = 安静模式, 1 = 进度条, 2 = 每轮一行。<br /><strong>callbacks</strong>: 一系列的 keras.callbacks.Callback 实例。一系列可以在训练时使用的回调函数。 详见 callbacks。<br /><strong>validation_split</strong>: 0 和 1 之间的浮点数。用作验证集的训练数据的比例。 模型将分出一部分不会被训练的验证数据，并将在每一轮结束时评估这些验证数据的误差和任何其他模型指标。 验证数据是混洗之前 x 和y 数据的最后一部分样本中。<br /><strong>validation_data</strong>: 元组 (x_val，y_val) 或元组 (x_val，y_val，val_sample_weights)， 用来评估损失，以及在每轮结束时的任何模型度量指标。 模型将不会在这个数据上进行训练。这个参数会覆盖 validation_split。<br /><strong>shuffle</strong>: 布尔值（是否在每轮迭代之前混洗数据）或者 字符串 (batch)。 batch 是处理 HDF5 数据限制的特殊选项，它对一个 batch 内部的数据进行混洗。 当 steps_per_epoch 非 None 时，这个参数无效。<br /><strong>class_weight</strong>: 可选的字典，用来映射类索引（整数）到权重（浮点）值，用于加权损失函数（仅在训练期间）。 这可能有助于告诉模型 「更多关注」来自代表性不足的类的样本。<br /><strong>sample_weight</strong>: 训练样本的可选 Numpy 权重数组，用于对损失函数进行加权（仅在训练期间）。 您可以传递与输入样本长度相同的平坦（1D）Numpy 数组（权重和样本之间的 1:1 映射）， 或者在时序数据的情况下，可以传递尺寸为 (samples, sequence_length) 的 2D 数组，以对每个样本的每个时间步施加不同的权重。 在这种情况下，你应该确保在 compile() 中指定 sample_weight_mode=“temporal”。<br /><strong>initial_epoch</strong>: 整数。开始训练的轮次（有助于恢复之前的训练）。<br />steps_per_epoch: 整数或 None。 在声明一个轮次完成并开始下一个轮次之前的总步数（样品批次）。 使用 TensorFlow 数据张量等输入张量进行训练时，默认值 None 等于数据集中样本的数量除以 batch 的大小，如果无法确定，则为 1。<br /><strong>validation_steps</strong>: 只有在指定了 steps_per_epoch 时才有用。停止前要验证的总步数（批次样本）。</p><p><strong>返回</strong></p><p>一个 History 对象。其 History.history 属性是连续 epoch 训练损失和评估值，以及验证集损失和评估值的记录（如果适用）。</p><p><strong>异常</strong></p><p><strong>RuntimeError</strong>: 如果模型从未编译。<br /><strong>alueError</strong>: 在提供的输入数据与模型期望的不匹配的情况下。</p><h3 id="modelevaluate函数"><a class="markdownIt-Anchor" href="#modelevaluate函数"></a> model.evaluate()函数</h3><p>model = keras.models.Sequential()<br />在测试模式，返回误差值和评估标准值。计算逐批次进行。</p><p>函数原型：<br /><strong>evaluate(x=None, y=None, batch_size=None, verbose=1, sample_weight=None, steps=None)</strong></p><p><strong>参数</strong></p><p><strong>x</strong>: 训练数据的 Numpy 数组。 如果模型中的输入层被命名，你也可以传递一个字典，将输入层名称映射到 Numpy 数组。 如果从本地框架张量馈送（例如 TensorFlow 数据张量）数据，x 可以是 None（默认）。<br /><strong>y</strong>: 目标（标签）数据的 Numpy 数组。 如果模型中的输出层被命名，你也可以传递一个字典，将输出层名称映射到 Numpy 数组。 如果从本地框架张量馈送（例如 TensorFlow 数据张量）数据，y 可以是 None（默认）。<br /><strong>batch_size</strong>: 整数或 None。每次提度更新的样本数。如果未指定，默认为 32.<br /><strong>verbose</strong>: 0, 1。日志显示模式。0 = 安静模式, 1 = 进度条。<br /><strong>sample_weight</strong>: 训练样本的可选 Numpy 权重数组，用于对损失函数进行加权（仅在训练期间）。 您可以传递与输入样本长度相同的平坦（1D）Numpy 数组（权重和样本之间的 1：1 映射），或者在时序数据的情况下，可以传递尺寸为 (samples, sequence_length) 的 2D 数组，以对每个样本的每个时间步施加不同的权重。在这种情况下，你应该确保在 compile() 中指定 sample_weight_mode=“temporal”。<br /><strong>steps</strong>: 整数或 None。 声明评估结束之前的总步数（批次样本）。默认值 None。</p><p><strong>返回</strong></p><p>标量测试误差（如果模型只有单个输出且没有评估指标）或标量列表（如果模型具有多个输出和/或指标）。 属性 model.metrics_names 将提供标量输出的显示标签。</p><h3 id="modelpredict函数"><a class="markdownIt-Anchor" href="#modelpredict函数"></a> model.predict()函数</h3><p>model = keras.models.Sequential()<br />为输入样本生成输出预测。计算逐批次进行。</p><p>函数原型：<br /><strong>predict(x, batch_size=None, verbose=0, steps=None)</strong></p><p><strong>参数</strong></p><p><strong>x</strong>: 输入数据，Numpy 数组（或者如果模型有多个输入，则为 Numpy 数组列表）。<br /><strong>batch_size</strong>: 整数。如未指定，默认为 32。<br /><strong>verbose</strong>: 日志显示模式，0 或 1。<br /><strong>steps</strong>: 声明预测结束之前的总步数（批次样本）。默认值 None。</p><p><strong>返回</strong></p><p>预测的 Numpy 数组。</p><p><strong>异常</strong></p><p><strong>ValueError</strong>: 如果提供的输入数据与模型的期望数据不匹配，或者有状态模型收到的数量不是批量大小的倍数。</p><h3 id="numpy数组保存"><a class="markdownIt-Anchor" href="#numpy数组保存"></a> numpy数组保存</h3><p><strong>numpy.save()函数</strong></p><p>函数原型<br /><strong>save(file, arr, allow_pickle=True, fix_imports=True)</strong></p><p><strong>参数</strong></p><p><strong>file</strong>：要保存的文件，扩展名为 .npy，如果文件路径末尾没有扩展名 .npy，该扩展名会被自动加上。<br /><strong>arr</strong>: 要保存的数组<br /><strong>allow_pickle</strong>: 可选，布尔值，允许使用 Python pickles 保存对象数组，Python 中的 pickle 用于在保存到磁盘文件或从磁盘文件读取之前，对对象进行序列化和反序列化。<br /><strong>fix_imports</strong>: 可选，为了方便 Pyhton2 中读取 Python3 保存的数据。</p><h3 id="numpyload函数"><a class="markdownIt-Anchor" href="#numpyload函数"></a> numpy.load()函数</h3><p>函数原型</p><p><strong>load(file, mmap_mode=None, allow_pickle=False, fix_imports=True,encoding=‘ASCII’)</strong></p><h3 id="h5py格式"><a class="markdownIt-Anchor" href="#h5py格式"></a> h5py格式</h3><p><strong>保存</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">h5 = h5py.File(<span class="string">"mydata/anuildata.h5"</span>, <span class="string">"w"</span>)</span><br><span class="line">h5.create_dataset(<span class="string">"train_image"</span>, data=train_image)</span><br><span class="line">h5.create_dataset(<span class="string">"train_label"</span>, data=train_label)</span><br><span class="line">h5.create_dataset(<span class="string">"test_image"</span>, data=test_image)</span><br><span class="line">h5.create_dataset(<span class="string">"test_label"</span>, data=test_label)</span><br><span class="line">h5.close()</span><br></pre></td></tr></table></figure><p><strong>读取</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">h5 = h5py.File(<span class="string">"mydata/anuildata.h5"</span>, <span class="string">"r"</span>)</span><br><span class="line">train_image=h5[<span class="string">'train_image'</span>]</span><br><span class="line">train_label=h5[<span class="string">'train_label'</span>]</span><br><span class="line">test_image=h5[<span class="string">'test_image'</span>]</span><br><span class="line">test_label=h5[<span class="string">'test_label'</span>]</span><br><span class="line">h5.close()</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 计算机视觉 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> tensorflow </tag>
            
            <tag> tf.keras </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo-theme-butterfly配置相关</title>
      <link href="/2020/01/23/hexo-theme-butterfly%E9%85%8D%E7%BD%AE%E7%9B%B8%E5%85%B3/"/>
      <url>/2020/01/23/hexo-theme-butterfly%E9%85%8D%E7%BD%AE%E7%9B%B8%E5%85%B3/</url>
      
        <content type="html"><![CDATA[<h3 id="page-front-matter"><a class="markdownIt-Anchor" href="#page-front-matter"></a> Page Front-matter</h3><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title:</span><br><span class="line">date:</span><br><span class="line">type: （tags,link,categories這三個頁面需要配置）</span><br><span class="line">comments: (是否需要顯示評論，默認true)</span><br><span class="line">description:</span><br><span class="line">top_img: (設置頂部圖)</span><br><span class="line">mathjax:</span><br><span class="line">katex:</span><br><span class="line">---</span><br></pre></td></tr></table></figure><h3 id="post-front-matter"><a class="markdownIt-Anchor" href="#post-front-matter"></a> Post Front-matter</h3><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title:</span><br><span class="line">date:</span><br><span class="line">tags:</span><br><span class="line">categories:</span><br><span class="line">keywords:</span><br><span class="line">description:</span><br><span class="line">top_img: （除非特定需要，可以不寫）</span><br><span class="line">comments  是否顯示評論（除非設置false,可以不寫）</span><br><span class="line">cover:  縮略圖</span><br><span class="line">toc:  是否顯示toc （除非特定文章設置，可以不寫）</span><br><span class="line">toc_number: 是否顯示toc數字 （除非特定文章設置，可以不寫）</span><br><span class="line">copyright: 是否顯示版權 （除非特定文章設置，可以不寫）</span><br><span class="line">top: 是否置顶</span><br><span class="line">mathjax:</span><br><span class="line">katex:</span><br><span class="line">hide:</span><br><span class="line">---</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 404找不到 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> butterfly-theme </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>VGGNetPaper-中文</title>
      <link href="/2020/01/22/VGGNetPaper-%E4%B8%AD%E6%96%87/"/>
      <url>/2020/01/22/VGGNetPaper-%E4%B8%AD%E6%96%87/</url>
      
        <content type="html"><![CDATA[<p><font face="黑体" size=6 ><center><strong>用于大规模图像识别的更深层次卷积网络</strong></center></font></p><p><font face="仿宋" ><center>Karen Simonyan∗ &amp; Andrew Zisserman+</center></font></p><p><font face="仿宋" ><center><strong>牛津大学工程科学系视觉几何小组</strong></center></font></p><p><font face="黑体" size=6 ><center><strong>摘要</strong></center></font></p><p>  在这项工作中，我们研究了卷积网络深度在大规模的图像识别环境下对准确性的影响。我们的主要贡献是使用非常小的（3×3）卷积滤波器架构对网络深度的增加进行了全面评估，这表明通过将深度推到16-19加权层可以实现对现有技术配置的显著改进。这些发现是我们的ImageNet Challenge 2014提交的基础，我们的团队在定位和分类过程中分别获得了第一名和第二名。我们还表明，我们的表示对于其他数据集泛化的很好，在其它数据集上取得了最好的结果。我们使我们的两个性能最好的ConvNet模型可公开获得，以便进一步研究计算机视觉中深度视觉表示的使用。</p><p><font face="宋体" size=4 ><strong>一、引言</strong></font></p><p>  卷积网络（ConvNets）近来在大规模图像和视频识别方面取得了巨大成功（Krizhevsky等，2012；Zeiler＆Fergus，2013；Sermanet等，2014；Simonyan＆Zisserman，2014）由于大的公开图像存储库，例如ImageNet，以及高性能计算系统的出现，例如GPU或大规模分布式集群（Dean等，2012），使这成为可能。特别是，在深度视觉识别架构的进步中，ImageNet大型视觉识别挑战（ILSVRC）（Russakovsky等，2014）发挥了重要作用，它已经成为几代大规模图像分类系统的测试台，从高维度浅层特征编码（Perronnin等，2010）（ILSVRC-2011的获胜者）到深层ConvNets（Krizhevsky等，2012）（ILSVRC-2012的获奖者）。<br />  随着ConvNets在计算机视觉领域越来越商品化，为了达到更好的准确性，已经进行了许多尝试来改进Krizhevsky等人（2012）最初的架构。例如，ILSVRC-2013（Zeiler＆Fergus，2013；Sermanet等，2014）表现最佳的提交使用了更小的感受窗口尺寸和更小的第一卷积层步长。另一条改进措施在整个图像和多个尺度上对网络进行密集地训练和测试（Sermanet等，2014；Howard，2014）。在本文中，我们解决了ConvNet架构设计的另一个重要方面——其深度。为此，我们修正了架构的其它参数，并通过添加更多的卷积层来稳定地增加网络的深度，这是可行的，因为在所有层中使用非常小的（3×3）卷积滤波器。<br />  因此，我们提出了更为精确的ConvNet架构，不仅可以在ILSVRC分类和定位任务上取得的最佳的准确性，而且还适用于其它的图像识别数据集，它们可以获得优异的性能，即使使用相对简单流程的一部分（例如，通过线性SVM分类深度特征而不进行微调）。我们发布了两款表现最好的模型1，以便进一步研究。<br />  本文的其余部分组织如下。在第2节，我们描述了我们的ConvNet配置。图像分类训练和评估的细节在第3节，并在第4节中在ILSVRC分类任务上对配置进行了比较。第5节总结了论文。为了完整起见，我们还将在附录A中描述和评估我们的ILSVRC-2014目标定位系统，并在附录B中讨论了非常深的特征在其它数据集上的泛化。最后，附录C包含了主要的论文修订列表。</p><p><font face="宋体" size=4 ><strong>二、 ConvNet配置</strong></font></p><p>  为了衡量ConvNet深度在公平环境中所带来的改进，我们所有的ConvNet层配置都使用相同的规则，灵感来自Ciresan等（2011）；Krizhevsky等人（2012年）。在本节中，我们首先描述我们的ConvNet配置的通用设计（第2.1节），然后详细说明评估中使用的具体配置（第2.2节）。最后，我们的设计选择将在2.3节进行讨论并与现有技术进行比较。</p><p><font face="宋体" size=3 ><strong>2.1 结构</strong></font></p><p>  在训练期间，我们的ConvNet的输入是固定大小的224×224 RGB图像。我们唯一的预处理是从每个像素中减去在训练集上计算的RGB均值。图像通过一堆卷积（conv.）层，我们使用感受野很小的滤波器：3×3（这是捕获左/右，上/下，中心概念的最小尺寸）。在其中一种配置中，我们还使用了1×1卷积滤波器，可以看作输入通道的线性变换（后面是非线性）。卷积步长固定为1个像素；卷积层输入的空间填充要满足卷积之后保留空间分辨率，即3×3卷积层的填充为1个像素。空间池化由五个最大池化层进行，这些层在一些卷积层之后（不是所有的卷积层之后都是最大池化）。在2×2像素窗口上进行最大池化，步长为2。<br />  一堆卷积层（在不同架构中具有不同深度）之后是三个全连接（FC）层：前两个每个都有4096个通道，第三个执行1000维ILSVRC分类，因此包含1000个通道（一个通道对应一个类别）。最后一层是soft-max层。所有网络中全连接层的配置是相同的。<br />  所有隐藏层都配备了修正（ReLU（Krizhevsky等，2012））非线性。我们注意到，我们的网络（除了一个）都不包含局部响应规范化（LRN）（Krizhevsky等，2012）：将在第4节看到，这种规范化并不能提高在ILSVRC数据集上的性能，但增加了内存消耗和计算时间。在应用的地方，LRN层的参数是（Krizhevsky等，2012）的参数。</p><p><font face="宋体" size=3 ><strong>2.2 配置</strong></font></p><p>  本文中评估的ConvNet配置在表1中列出，每列一个。接下来我们将按网站名称（A-E）来提及网络。所有配置都遵循2.1节提出的通用设计，并且仅是深度不同：从网络A中的11个加权层（8个卷积层和3个FC层）到网络E中的19个加权层（16个卷积层和3个FC层）。卷积层的宽度（通道数）相当小，从第一层中的64开始，然后在每个最大池化层之后增加2倍，直到达到512。<br />  表1：ConvNet配置（以列显示）。随着更多的层被添加，配置的深度从左（A）增加到右（E）（添加的层以粗体显示）。卷积层参数表示为“conv⟨感受野大小⟩-通道数⟩”。为了简洁起见，不显示ReLU激活功能。</p><p><font face="宋体" size=2 ><center>表 1</center></font></p><img src="/" class="lazyload" data-src="https://nevercode.space/res/pic/2020-1/Table1.png"  align=center><p>  在表2中，我们报告了每个配置的参数数量。尽管深度很大，我们的网络中权重数量并不大于具有更大卷积层宽度和感受野的较浅网络中的权重数量（144M的权重在（Sermanet等人，2014）中）。</p><p><font face="宋体" size=2 ><center>表2：参数数量（百万级别）</center></font></p><img src="/" class="lazyload" data-src="https://nevercode.space/res/pic/2020-1/Table2.png"  align=center><p><font face="宋体" size=3 ><strong>2.3 讨论</strong></font></p><p>  我们的ConvNet配置与ILSVRC-2012（Krizhevsky等，2012）和ILSVRC-2013比赛（Zeiler＆Fergus，2013；Sermanet等，2014）表现最佳的参赛提交中使用的ConvNet配置有很大不同。不是在第一卷积层中使用相对较大的感受野（例如，在（Krizhevsky等人，2012）中的11×11，步长为4，或在（Zeiler＆Fergus，2013；Sermanet等，2014）中的7×7，步长为2），我们在整个网络使用非常小的3×3感受野，与输入的每个像素（步长为1）进行卷积。很容易看到两个3×3卷积层堆叠（没有空间池化）有5×5的有效感受野；三个这样的层具有7×7的有效感受野。那么我们获得了什么？例如通过使用三个3×3卷积层的堆叠来替换单个7×7层。首先，我们结合了三个非线性修正层，而不是单一的，这使得决策函数更具判别性。其次，我们减少参数的数量：假设三层3×3卷积堆叠的输入和输出有C个通道，堆叠卷积层的参数为<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>3</mn><mo stretchy="false">(</mo><msup><mn>3</mn><mn>2</mn></msup><msup><mi>C</mi><mn>2</mn></msup><mo stretchy="false">)</mo><mo>=</mo><mn>27</mn><msup><mi>C</mi><mn>2</mn></msup></mrow><annotation encoding="application/x-tex">3(3^2 C^2 )=27C^2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mord">3</span><span class="mopen">(</span><span class="mord"><span class="mord">3</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord">2</span><span class="mord">7</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span>个权重；同时，单个7×7卷积层将需要<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mn>7</mn><mn>2</mn></msup><msup><mi>C</mi><mn>2</mn></msup><mo>=</mo><mn>49</mn><msup><mi>C</mi><mn>2</mn></msup></mrow><annotation encoding="application/x-tex">7^2 C^2=49C^2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord">7</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord">4</span><span class="mord">9</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span>个参数，即参数多81％。这可以看作是对7×7卷积滤波器进行正则化，迫使它们通过3×3滤波器（在它们之间注入非线性）进行分解。<br />  结合1×1卷积层（配置C，表1）是增加决策函数非线性而不影响卷积层感受野的一种方式。即使在我们的案例下，1×1卷积基本上是在相同维度空间上的线性投影（输入和输出通道的数量相同），由修正函数引入附加的非线性。应该注意的是1×1卷积层最近在Lin等人(2014)的“Network in Network”架构中已经得到了使用。<br />  Ciresan等人（2011）以前使用小尺寸的卷积滤波器，但是他们的网络深度远远低于我们的网络，他们并没有在大规模的ILSVRC数据集上进行评估。Goodfellow等人（2014）在街道号识别任务中采用深层ConvNets（11个权重层），显示出增加的深度导致了更好的性能。GooLeNet（Szegedy等，2014），ILSVRC-2014分类任务的表现最好的项目，是独立于我们工作之外的开发的，但是类似的是它是基于非常深的ConvNets（22个权重层）和小卷积滤波器（除了3×3，它们也使用了1×1和5×5卷积）。然而，它们的网络拓扑结构比我们的更复杂，并且在第一层中特征图的空间分辨率被更积极地减少，以减少计算量。正如将在第4.5节显示的那样，我们的模型在单网络分类精度方面胜过Szegedy等人（2014）。</p><p><font face="宋体" size=4 ><strong>三、分类框架</strong></font></p><p>  在上一节中，我们介绍了我们的网络配置的细节。在本节中，我们将介绍分类ConvNet训练和评估的细节。</p><p><font face="宋体" size=3 ><strong>3.1 训练</strong></font></p><p>  ConvNet训练过程通常遵循Krizhevsky等人（2012）（除了从多尺度训练图像中对输入裁剪图像进行采样外，如下文所述）。也就是说，通过使用具有动量的小批量梯度下降（基于反向传播（LeCun等人，1989））优化多项式逻辑回归目标函数来进行训练。批量大小设为256，动量为0.9。训练通过权重衰减（L2惩罚乘子设定为<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>5</mn><mo>×</mo><mn>1</mn><msup><mn>0</mn><mrow><mo>−</mo><mn>4</mn></mrow></msup></mrow><annotation encoding="application/x-tex">5×10^{-4}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">5</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">4</span></span></span></span></span></span></span></span></span></span></span></span>进行正则化，前两个全连接层执行丢弃正则化（丢弃率设定为0.5）。学习率初始设定为<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>1</mn><msup><mn>0</mn><mrow><mo>−</mo><mn>2</mn></mrow></msup></mrow><annotation encoding="application/x-tex">10^{-2}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span></span>，然后当验证集准确率停止改善时，减少10倍。学习率总共降低3次，学习在37万次迭代后停止（74个epochs）。我们推测，尽管与（Krizhevsky等，2012）相比我们的网络参数更多，网络的深度更大，但网络需要更小的epoch就可以收敛，这是由于（a）由更大的深度和更小的卷积滤波器尺寸引起的隐式正则化，（b）某些层的预初始化。<br />  网络权重的初始化是重要的，因为由于深度网络中梯度的不稳定，不好的初始化可能会阻碍学习。为了规避这个问题，我们开始训练配置A（表1），足够浅以随机初始化进行训练。然后，当训练更深的架构时，我们用网络A的层初始化前四个卷积层和最后三个全连接层（中间层被随机初始化）。我们没有减少预初始化层的学习率，允许他们在学习过程中改变。对于随机初始化（如果应用），我们从均值为0和方差为<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>1</mn><msup><mn>0</mn><mrow><mo>−</mo><mn>2</mn></mrow></msup></mrow><annotation encoding="application/x-tex">10^{-2}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span></span>的正态分布中采样权重。偏置初始化为零。值得注意的是，在提交论文之后，我们发现可以通过使用Glorot＆Bengio（2010）的随机初始化程序来初始化权重而不进行预训练。<br />  为了获得固定大小的224×224 ConvNet输入图像，它们从归一化的训练图像中被随机裁剪（每个图像每次SGD迭代进行一次裁剪）。为了进一步增强训练集，裁剪图像经过了随机水平翻转和随机RGB颜色偏移（Krizhevsky等，2012）。下面解释训练图像归一化。<br />  训练图像大小。令S是等轴归一化的训练图像的最小边，ConvNet输入从S中裁剪（我们也将S称为训练尺度）。虽然裁剪尺寸固定为224×224，但原则上S可以是不小于224的任何值：对于S=224，裁剪图像将捕获整个图像的统计数据，完全扩展训练图像的最小边；对于S»224，裁剪图像将对应于图像的一小部分，包含小对象或对象的一部分。<br />  我们考虑两种方法来设置训练尺度S。第一种是修正对应单尺度训练的S（注意，采样裁剪图像中的图像内容仍然可以表示多尺度图像统计）。在我们的实验中，我们评估了以两个固定尺度训练的模型：S=256（已经在现有技术中广泛使用（Krizhevsky等人，2012；Zeiler＆Fergus，2013；Sermanet等，2014））和S=384。给定ConvNet配置，我们首先使用S=256来训练网络。为了加速S=384网络的训练，用S=256预训练的权重来进行初始化，我们使用较小的初始学习率<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>1</mn><msup><mn>0</mn><mrow><mo>−</mo><mn>3</mn></mrow></msup></mrow><annotation encoding="application/x-tex">10^{-3}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">3</span></span></span></span></span></span></span></span></span></span></span></span>。<br />  设置S的第二种方法是多尺度训练，其中每个训练图像通过从一定范围[<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>s</mi><mrow><mi>m</mi><mi>i</mi><mi>n</mi></mrow></msub></mrow><annotation encoding="application/x-tex">s_{min}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">m</span><span class="mord mathdefault mtight">i</span><span class="mord mathdefault mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>s</mi><mrow><mi>m</mi><mi>a</mi><mi>x</mi></mrow></msub></mrow><annotation encoding="application/x-tex">s_{max}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">m</span><span class="mord mathdefault mtight">a</span><span class="mord mathdefault mtight">x</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>]（我们使用<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>s</mi><mrow><mi>m</mi><mi>i</mi><mi>n</mi></mrow></msub><mo>=</mo><mn>256</mn></mrow><annotation encoding="application/x-tex">s_{min}=256</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">m</span><span class="mord mathdefault mtight">i</span><span class="mord mathdefault mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">2</span><span class="mord">5</span><span class="mord">6</span></span></span></span>和<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>s</mi><mrow><mi>m</mi><mi>a</mi><mi>x</mi></mrow></msub><mo>=</mo><mn>512</mn></mrow><annotation encoding="application/x-tex">s_{max}=512</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">m</span><span class="mord mathdefault mtight">a</span><span class="mord mathdefault mtight">x</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">5</span><span class="mord">1</span><span class="mord">2</span></span></span></span>）随机采样S来单独进行归一化。由于图像中的目标可能具有不同的大小，因此在训练期间考虑到这一点是有益的。这也可以看作是通过尺度抖动进行训练集增强，其中单个模型被训练在一定尺度范围内识别对象。为了速度的原因，我们通过对具有相同配置的单尺度模型的所有层进行微调，训练了多尺度模型，并用固定的S=384进行预训练。</p><p><font face="宋体" size=3 ><strong>3.2 测试</strong></font></p><p>  在测试时，给出训练的ConvNet和输入图像，它按以下方式分类。首先，将其等轴地归一化到预定义的最小图像边，表示为Q（我们也将其称为测试尺度）。我们注意到，Q不一定等于训练尺度S（正如我们在第4节中所示，每个S使用Q的几个值会导致性能改进）。然后，网络以类似于（Sermanet等人，2014）的方式密集地应用于归一化的测试图像上。即，全连接层首先被转换成卷积层（第一FC层转换到7×7卷积层，最后两个FC层转换到1×1卷积层）。然后将所得到的全卷积网络应用于整个（未裁剪）图像上。结果是类得分图的通道数等于类别的数量，以及取决于输入图像大小的可变空间分辨率。最后，为了获得图像的类别分数的固定大小的向量，类得分图在空间上平均（和池化）。我们还通过水平翻转图像来增强测试集；将原始图像和翻转图像的soft-max类后验进行平均，以获得图像的最终分数。<br />  由于全卷积网络被应用在整个图像上，所以不需要在测试时对采样多个裁剪图像（Krizhevsky等，2012），因为它需要网络重新计算每个裁剪图像，这样效率较低。同时，如Szegedy等人（2014）所做的那样，使用大量的裁剪图像可以提高准确度，因为与全卷积网络相比，它使输入图像的采样更精细。此外，由于不同的卷积边界条件，多裁剪图像评估是密集评估的补充：当将ConvNet应用于裁剪图像时，卷积特征图用零填充，而在密集评估的情况下，相同裁剪图像的填充自然会来自于图像的相邻部分（由于卷积和空间池化），这大大增加了整个网络的感受野，因此捕获了更多的上下文。虽然我们认为在实践中，多裁剪图像的计算时间增加并不足以证明准确性的潜在收益，但作为参考，我们还在每个尺度使用50个裁剪图像（5×5规则网格，2次翻转）评估了我们的网络，在3个尺度上总共150个裁剪图像，与Szegedy等人(2014)在4个尺度上使用的144个裁剪图像。</p><p><font face="宋体" size=3 ><strong>3.3 实现细节</strong></font></p><p>  我们的实现来源于公开的C++ Caffe工具箱（Jia，2013）（2013年12月推出），但包含了一些重大的修改，使我们能够对安装在单个系统中的多个GPU进行训练和评估，也能训练和评估在多个尺度上（如上所述）的全尺寸（未裁剪）图像。多GPU训练利用数据并行性，通过将每批训练图像分成几个GPU批次，每个GPU并行处理。在计算GPU批次梯度之后，将其平均以获得完整批次的梯度。梯度计算在GPU之间是同步的，所以结果与在单个GPU上训练完全一样。<br />  最近提出了更加复杂的加速ConvNet训练的方法（Krizhevsky，2014），它们对网络的不同层之间采用模型和数据并行，我们发现我们概念上更简单的方案与使用单个GPU相比，在现有的4-GPU系统上已经提供了3.75倍的加速。在配备四个NVIDIA Titan Black GPU的系统上，根据架构训练单个网络需要2-3周时间。</p><p><font face="宋体" size=4 ><strong>四、分类实验</strong></font></p><p>  数据集。在本节中，我们介绍了描述的ConvNet架构（用于ILSVRC 2012-2014挑战）在ILSVRC-2012数据集上实现的图像分类结果。数据集包括1000个类别的图像，并分为三组：训练（130万张图像），验证（5万张图像）和测试（留有类标签的10万张图像）。使用两个措施评估分类性能：top-1和top-5错误率。前者是多类分类误差，即不正确分类图像的比例；后者是ILSVRC中使用的主要评估标准，并且计算为图像真实类别在前5个预测类别之外的图像比例。<br />  对于大多数实验，我们使用验证集作为测试集。在测试集上也进行了一些实验，并将其作为ILSVRC-2014竞赛（Russakovsky等，2014）“VGG”小组的输入提交到了官方的ILSVRC服务器。</p><p><font face="宋体" size=3 ><strong>4.1 单尺度评估</strong></font></p><p>  我们首先评估单个ConvNet模型在单尺度上的性能，其层结构配置如2.2节中描述。测试图像大小设置如下：对于固定S有Q=S，对于抖动<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>S</mi><mo>∈</mo><mo stretchy="false">[</mo><msub><mi>s</mi><mrow><mi>m</mi><mi>i</mi><mi>n</mi></mrow></msub><mo separator="true">,</mo><msub><mi>s</mi><mrow><mi>m</mi><mi>a</mi><mi>x</mi></mrow></msub><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">S∈[s_{min}, s_{max}]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72243em;vertical-align:-0.0391em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord"><span class="mord mathdefault">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">m</span><span class="mord mathdefault mtight">i</span><span class="mord mathdefault mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">m</span><span class="mord mathdefault mtight">a</span><span class="mord mathdefault mtight">x</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">]</span></span></span></span>，有<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>Q</mi><mo>=</mo><mn>0.5</mn><mo stretchy="false">(</mo><msub><mi>s</mi><mrow><mi>m</mi><mi>i</mi><mi>n</mi></mrow></msub><mo>+</mo><msub><mi>s</mi><mrow><mi>m</mi><mi>a</mi><mi>x</mi></mrow></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">Q=0.5(s_{min}+ s_{max})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">Q</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">0</span><span class="mord">.</span><span class="mord">5</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">m</span><span class="mord mathdefault mtight">i</span><span class="mord mathdefault mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">m</span><span class="mord mathdefault mtight">a</span><span class="mord mathdefault mtight">x</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>。结果如表3所示。<br />  首先，我们注意到，使用局部响应归一化（A-LRN网络）在没有任何归一化层的情况下，对模型A没有改善。因此，我们在较深的架构（B-E）中不采用归一化。<br />  第二，我们观察到分类误差随着ConvNet深度的增加而减小：从A中的11层到E中的19层。值得注意的是，尽管深度相同，配置C（包含三个1×1卷积层）比在整个网络层中使用3×3卷积的配置D更差。这表明，虽然额外的非线性确实有帮助（C优于B），但也可以通过使用具有非平凡感受野（D比C好）的卷积滤波器来捕获空间上下文。当深度达到19层时，我们架构的错误率饱和，但更深的模型可能有益于较大的数据集。我们还将网络B与具有5×5卷积层的浅层网络进行了比较，浅层网络可以通过用单个5×5卷积层替换B中每对3×3卷积层得到（其具有相同的感受野如第2.3节所述）。测量的浅层网络top-1错误率比网络B的top-1错误率（在中心裁剪图像上）高7％，这证实了具有小滤波器的深层网络优于具有较大滤波器的浅层网络。<br />  最后，训练时的尺度抖动（S∈[256;512]）得到了与固定最小边（S=256或S=384）的图像训练相比更好的结果，即使在测试时使用单尺度。这证实了通过尺度抖动进行的训练集增强确实有助于捕获多尺度图像统计。</p><p><font face="宋体" size=2 ><center>表3：在单测试尺度的ConvNet性能</center></font></p><img src="/" class="lazyload" data-src="https://nevercode.space/res/pic/2020-1/Table3.png"  align=center><p><font face="宋体" size=3 ><strong>4.2 多尺度评估</strong></font></p><p>  在单尺度上评估ConvNet模型后，我们现在评估测试时尺度抖动的影响。它包括在一张测试图像的几个归一化版本上运行模型（对应于不同的Q值），然后对所得到的类别后验进行平均。考虑到训练和测试尺度之间的巨大差异会导致性能下降，用固定S训练的模型在三个测试图像尺度上进行了评估，接近于训练一次：Q=S−32,S,S+32。同时，训练时的尺度抖动允许网络在测试时应用于更广的尺度范围，所以用变量<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>S</mi><mo>∈</mo><mo stretchy="false">[</mo><msub><mi>s</mi><mrow><mi>m</mi><mi>i</mi><mi>n</mi></mrow></msub><mo separator="true">;</mo><msub><mi>s</mi><mrow><mi>m</mi><mi>a</mi><mi>x</mi></mrow></msub><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">S∈[s_{min}; s_{max}]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72243em;vertical-align:-0.0391em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord"><span class="mord mathdefault">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">m</span><span class="mord mathdefault mtight">i</span><span class="mord mathdefault mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">;</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">m</span><span class="mord mathdefault mtight">a</span><span class="mord mathdefault mtight">x</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">]</span></span></span></span>训练的模型在更大的尺寸范围Q =<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo fence="false">(</mo><msub><mi>S</mi><mrow><mi>m</mi><mi>i</mi><mi>n</mi></mrow></msub><mo separator="true">,</mo><mn>0.5</mn><mo stretchy="false">(</mo><msub><mi>S</mi><mrow><mi>m</mi><mi>i</mi><mi>n</mi></mrow></msub><mo>+</mo><msub><mi>S</mi><mrow><mi>m</mi><mi>a</mi><mi>x</mi></mrow></msub><mo stretchy="false">)</mo><mo separator="true">,</mo><msub><mi>S</mi><mrow><mi>m</mi><mi>a</mi><mi>x</mi></mrow></msub><mo fence="false">)</mo></mrow><annotation encoding="application/x-tex">\Big (S_{min}, 0.5(S_{min} + S_{max}), S_{max} \Big )</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.80002em;vertical-align:-0.65002em;"></span><span class="mord"><span class="delimsizing size2">(</span></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">m</span><span class="mord mathdefault mtight">i</span><span class="mord mathdefault mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">0</span><span class="mord">.</span><span class="mord">5</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">m</span><span class="mord mathdefault mtight">i</span><span class="mord mathdefault mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.80002em;vertical-align:-0.65002em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">m</span><span class="mord mathdefault mtight">a</span><span class="mord mathdefault mtight">x</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">m</span><span class="mord mathdefault mtight">a</span><span class="mord mathdefault mtight">x</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="delimsizing size2">)</span></span></span></span></span>上进行评估。</p><p>  表4中给出的结果表明，测试时的尺度抖动导致了更好的性能（与在单一尺度上相同模型的评估相比，如表3所示）。如前所述，最深的配置（D和E）执行最佳，并且尺度抖动优于使用固定最小边S的训练。我们在验证集上的最佳单网络性能为24.8％/7.5％ top-1/top-5的错误率（在表4中用粗体突出显示）。在测试集上，配置E实现了7.3％ top-5的错误率。</p><p><font face="宋体" size=2 ><center>表4：在多个测试尺度上的ConvNet性能</center></font></p><img src="/" class="lazyload" data-src="https://nevercode.space/res/pic/2020-1/Table4.png"  align=center><p><font face="宋体" size=3 ><strong>4.3 多裁剪图像评估</strong></font></p><p>  在表5中，我们将稠密ConvNet评估与多裁剪图像评估进行比较（细节参见第3.2节）。我们还通过平均其soft-max输出来评估两种评估技术的互补性。可以看出，使用多裁剪图像表现比密集评估略好，而且这两种方法确实是互补的，因为它们的组合优于其中的每一种。如上所述，我们假设这是由于卷积边界条件的不同处理。</p><p><font face="宋体" size=2 ><center>表5：ConvNet评估技术比较。在所有的实验中训练尺度S从[256；512]采样，三个测试适度Q考虑：{256, 384, 512}</center></font></p><img src="/" class="lazyload" data-src="https://nevercode.space/res/pic/2020-1/Table5.png"  align=center><p><font face="宋体" size=3 ><strong>4.4 卷积网络融合</strong></font></p><p>  到目前为止，我们评估了ConvNet模型的性能。在这部分实验中，我们通过对soft-max类别后验进行平均，结合了几种模型的输出。由于模型的互补性，这提高了性能，并且在了2012年（Krizhevsky等，2012）和2013年（Zeiler＆Fergus，2013；Sermanet等，2014）ILSVRC的顶级提交中使用。<br />  结果如表6所示。在ILSVRC提交的时候，我们只训练了单规模网络，以及一个多尺度模型D（仅在全连接层进行微调而不是所有层）。由此产生的7个网络组合具有7.3％的ILSVRC测试误差。在提交之后，我们考虑了只有两个表现最好的多尺度模型（配置D和E）的组合，它使用密集评估将测试误差降低到7.0％，使用密集评估和多裁剪图像评估将测试误差降低到6.8％。作为参考，我们表现最佳的单模型达到7.1％的误差（模型E，表5）。</p><p><font face="宋体" size=2 ><center>表6：多个卷积网络融合结果</center></font></p><img src="/" class="lazyload" data-src="https://nevercode.space/res/pic/2020-1/Table6.png"  align=center><p><font face="宋体" size=3 ><strong>4.5 与最新技术比较</strong></font></p><p>  最后，我们在表7中与最新技术比较我们的结果。在ILSVRC-2014挑战的分类任务（Russakovsky等，2014）中，我们的“VGG”团队获得了第二名，使用7个模型的组合取得了7.3％测试误差。提交后，我们使用2个模型的组合将错误率降低到6.8％。<br />  从表7可以看出，我们非常深的ConvNets显著优于前一代模型，在ILSVRC-2012和ILSVRC-2013竞赛中取得了最好的结果。我们的结果对于分类任务获胜者（GoogLeNet具有6.7％的错误率）也具有竞争力，并且大大优于ILSVRC-2013获胜者Clarifai的提交，其使用外部训练数据取得了11.2％的错误率，没有外部数据则为11.7％。这是非常显著的，考虑到我们最好的结果是仅通过组合两个模型实现的——明显少于大多数ILSVRC提交。在单网络性能方面，我们的架构取得了最好节果（7.0％测试误差），超过单个GoogLeNet 0.9％。值得注意的是，我们并没有偏离LeCun（1989）等人经典的ConvNet架构，但通过大幅增加深度改善了它。</p><p><font face="宋体" size=2 ><center>表7：在ILSVRC分类中与最新技术比较。我们的方法表示为“VGG”。报告的结果没有使用外部数据</center></font></p><img src="/" class="lazyload" data-src="https://nevercode.space/res/pic/2020-1/Table7.png"  align=center><p><font face="宋体" size=4 ><strong>五、结论</strong></font></p><p>  在这项工作中，我们评估了非常深的卷积网络（最多19个权重层）用于大规模图像分类。已经证明，表示深度有利于分类精度，并且深度大大增加的传统ConvNet架构（LeCun等，1989；Krizhevsky等，2012）可以实现ImageNet挑战数据集上的最佳性能。在附录中，我们还显示了我们的模型很好地泛化到各种各样的任务和数据集上，可以匹敌或超越更复杂的识别流程，其构建围绕不深的图像表示。我们的结果再次证实了深度在视觉表示中的重要性。</p><p><font face="宋体" size=4 ><strong>致谢</strong></font></p><p>  这项工作得到ERC授权的VisRec编号228180的支持.我们非常感谢NVIDIA公司捐赠GPU为此研究使用。</p><p><font face="宋体" size=4 ><strong>参考</strong></font></p><p>Bell, S., Upchurch, P., Snavely, N., and Bala, K. Material recognition in the wild with the materials in context database. CoRR, abs/1412.0623, 2014.</p><p>Chatfield, K., Simonyan, K., Vedaldi, A., and Zisserman, A. Return of the devil in the details: Delving deep into convolutional nets. In Proc. BMVC., 2014.</p><p>Cimpoi, M., Maji, S., and Vedaldi, A. Deep convolutional filter banks for texture recognition and segmentation.CoRR, abs/1411.6836, 2014.</p><p>Ciresan, D. C., Meier, U., Masci, J., Gambardella, L. M., and Schmidhuber, J. Flexible, high performance convolutional neural networks for image classification. In IJCAI, pp. 1237–1242, 2011.</p><p>Dean, J., Corrado, G., Monga, R., Chen, K., Devin, M., Mao, M., Ranzato, M., Senior, A., Tucker, P., Yang, K., Le, Q. V., and Ng, A. Y. Large scale distributed deep networks. In NIPS, pp. 1232–1240, 2012.</p><p>Deng, J., Dong, W., Socher, R., Li, L.-J., Li, K., and Fei-Fei, L. Imagenet: A large-scale hierarchical image database. In Proc. CVPR, 2009.</p><p>Donahue, J., Jia, Y., Vinyals, O., Hoffman, J., Zhang, N., Tzeng, E., and Darrell, T. Decaf: A deep convolutional activation feature for generic visual recognition. CoRR, abs/1310.1531, 2013.</p><p>Everingham, M., Eslami, S. M. A., Van Gool, L., Williams, C., Winn, J., and Zisserman, A. The Pascal visual object classes challenge: A retrospective. IJCV, 111(1):98–136, 2015.</p><p>Fei-Fei, L., Fergus, R., and Perona, P. Learning generative visual models from few training examples: An incremental bayesian approach tested on 101 object categories. In IEEE CVPR Workshop of Generative Model Based Vision, 2004.</p><p>Girshick, R. B., Donahue, J., Darrell, T., and Malik, J. Rich feature hierarchies for accurate object detection and semantic segmentation. CoRR, abs/1311.2524v5, 2014. Published in Proc. CVPR, 2014.</p><p>Gkioxari, G., Girshick, R., and Malik, J. Actions and attributes from wholes and parts. CoRR, abs/1412.2604, 2014.</p><p>Glorot, X. and Bengio, Y. Understanding the difficulty of training deep feedforward neural networks. In Proc. AISTATS, volume 9, pp. 249–256, 2010.</p><p>Goodfellow, I. J., Bulatov, Y., Ibarz, J., Arnoud, S., and Shet, V. Multi-digit number recognition from street view imagery using deep convolutional neural networks. In Proc. ICLR, 2014.</p><p>Griffin, G., Holub, A., and Perona, P. Caltech-256 object category dataset. Technical Report 7694, California Institute of Technology, 2007.</p><p>He, K., Zhang, X., Ren, S., and Sun, J. Spatial pyramid pooling in deep convolutional networks for visual recognition. CoRR, abs/1406.4729v2, 2014.</p><p>Hoai, M. Regularized max pooling for image categorization. In Proc. BMVC., 2014.</p><p>Howard, A. G. Some improvements on deep convolutional neural network based image classification. In Proc. ICLR, 2014.</p><p>Jia, Y. Caffe: An open source convolutional architecture for fast feature embedding. <a href="http://caffe.berkeleyvision.org" target="_blank" rel="noopener">caffe.berkeleyvision.org</a>, 2013.</p><p>Karpathy, A. and Fei-Fei, L. Deep visual-semantic alignments for generating image descriptions. CoRR, abs/1412.2306, 2014.</p><p>Kiros, R., Salakhutdinov, R., and Zemel, R. S. Unifying visual-semantic embeddings with multimodal neural language models. CoRR, abs/1411.2539, 2014.</p><p>Krizhevsky, A. One weird trick for parallelizing convolutional neural networks. CoRR, abs/1404.5997, 2014.</p><p>Krizhevsky, A., Sutskever, I., and Hinton, G. E. ImageNet classification with deep convolutional neural networks. In NIPS, pp. 1106–1114, 2012.</p><p>LeCun, Y., Boser, B., Denker, J. S., Henderson, D., Howard, R. E., Hubbard, W., and Jackel, L. D. Backpropagation applied to handwritten zip code recognition. Neural Computation, 1(4):541–551, 1989.</p><p>Lin, M., Chen, Q., and Yan, S. Network in network. In Proc. ICLR, 2014.</p><p>Long, J., Shelhamer, E., and Darrell, T. Fully convolutional networks for semantic segmentation. CoRR, abs/1411.4038, 2014.</p><p>Oquab, M., Bottou, L., Laptev, I., and Sivic, J. Learning and Transferring Mid-Level Image Representations using Convolutional Neural Networks. In Proc. CVPR, 2014.</p><p>Perronnin, F., Sa ́nchez, J., and Mensink, T. Improving the Fisher kernel for large-scale image classification. In Proc. ECCV, 2010.</p><p>Razavian, A., Azizpour, H., Sullivan, J., and Carlsson, S. CNN Features off-the-shelf: an Astounding Baseline for Recognition. CoRR, abs/1403.6382, 2014.</p><p>Russakovsky, O., Deng, J., Su, H., Krause, J., Satheesh, S., Ma, S., Huang, Z., Karpathy, A., Khosla, A., Bernstein, M., Berg, A. C., and Fei-Fei, L. ImageNet large scale visual recognition challenge. CoRR, abs/1409.0575, 2014.</p><p>Sermanet, P., Eigen, D., Zhang, X., Mathieu, M., Fergus, R., and LeCun, Y. OverFeat: Integrated Recognition, Localization and Detection using Convolutional Networks. In Proc. ICLR, 2014.</p><p>Simonyan, K. and Zisserman, A. Two-stream convolutional networks for action recognition in videos. CoRR, abs/1406.2199, 2014. Published in Proc. NIPS, 2014.</p><p>Szegedy, C., Liu, W., Jia, Y., Sermanet, P., Reed, S., Anguelov, D., Erhan, D., Vanhoucke, V., and Rabinovich, A. Going deeper with convolutions. CoRR, abs/1409.4842, 2014.</p><p>Wei, Y., Xia, W., Huang, J., Ni, B., Dong, J., Zhao, Y., and Yan, S. CNN: Single-label to multi-label. CoRR, abs/1406.5726, 2014.</p><p>Zeiler, M. D. and Fergus, R. Visualizing and understanding convolutional networks. CoRR, abs/1311.2901, 2013. Published in Proc. ECCV, 2014.</p>]]></content>
      
      
      <categories>
          
          <category> 计算机视觉 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> AGGNet </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>常用资源网站[不定期更新&lt;:]</title>
      <link href="/2020/01/22/%E5%B8%B8%E7%94%A8%E8%B5%84%E6%BA%90%E7%BD%91%E7%AB%99-%E4%B8%8D%E5%AE%9A%E6%9C%9F%E6%9B%B4%E6%96%B0/"/>
      <url>/2020/01/22/%E5%B8%B8%E7%94%A8%E8%B5%84%E6%BA%90%E7%BD%91%E7%AB%99-%E4%B8%8D%E5%AE%9A%E6%9C%9F%E6%9B%B4%E6%96%B0/</url>
      
        <content type="html"><![CDATA[<h1 id="论文"><a class="markdownIt-Anchor" href="#论文"></a> 论文</h1><ol><li><p><a href="https://arxiv.org/" target="_blank" rel="noopener">ArXiv</a></p></li><li><p><a href="http://www.sci-hub.ac.cn/" target="_blank" rel="noopener">文献小镇</a></p></li><li><p><a href="http://tool.yovisun.com/scihub/" target="_blank" rel="noopener">Sci-Hub可用链接</a></p></li><li><p><a href="http://tool.yovisun.com/gs/" target="_blank" rel="noopener">谷歌学术『Google』可用链接</a></p></li><li><p><a href="https://scholar.chongbuluo.com/" target="_blank" rel="noopener">虫部落学术搜索</a>(推荐)</p></li><li><p><a href="https://xueshu.9178.work/" target="_blank" rel="noopener">沃客学术导航</a></p></li><li><p><a href="https://www.cn-ki.net/" target="_blank" rel="noopener">iData</a></p></li><li><p><a href="http://www.hejizhan.com/bbs/" target="_blank" rel="noopener">万千合集站</a></p></li><li><p><a href="https://ifish.fun/paper/search" target="_blank" rel="noopener">AnyPaper</a></p></li><li><p><a href="http://www.oalib.com/" target="_blank" rel="noopener">&quot;Open Access Library</a></p></li><li><p><a href="https://www.highwirepress.com/" target="_blank" rel="noopener">HighWire 斯坦福学术文献电子期刊</a></p></li><li><p><a href="https://lolmythesis.com/" target="_blank" rel="noopener">LolMyThesis 哈佛毕业论文分享网站</a></p></li><li><p><a href="https://lunwen.im/" target="_blank" rel="noopener">喵咪论文</a></p></li><li><p><a href="http://hao.199it.com/" target="_blank" rel="noopener">大数据导航</a></p></li></ol><h1 id="生活"><a class="markdownIt-Anchor" href="#生活"></a> 生活</h1><h2 id="二次元"><a class="markdownIt-Anchor" href="#二次元"></a> 二次元</h2><ol><li><p><a href="http://www.zzzfun.com/" target="_blank" rel="noopener">zzzFun</a></p></li><li><p><a href="https://www.ammmi.com/" target="_blank" rel="noopener">樱花动漫</a></p></li><li><p><a href="http://www.bimibimi.me/" target="_blank" rel="noopener">M站_哔咪哔咪,这里是兴趣使然的无名小站_bimibimi</a></p></li><li><p><a href="http://d.yimoe.cc/" target="_blank" rel="noopener">翼萌导航</a></p></li><li><p><a href="http://www.zhimoe.com/" target="_blank" rel="noopener">知萌导航</a></p></li><li><p><a href="http://luxun.pro/" target="_blank" rel="noopener">鲁迅追番</a></p></li><li><p><a href="https://anime1.me/" target="_blank" rel="noopener">Anime1.me 動畫線上看</a></p></li><li><p><a href="https://www.moebaka.com/" target="_blank" rel="noopener">呆萌大家族</a></p></li><li><p><a href="https://a.moecool.net/" target="_blank" rel="noopener">萌次元</a></p></li><li><p><a href="https://www.aesma.cn/" target="_blank" rel="noopener">萌导航</a></p></li><li><p><a href="https://www.moe123.net/" target="_blank" rel="noopener">萌导航, 你的二次元导航姬！</a></p></li><li><p><a href="http://www.silisili.me/" target="_blank" rel="noopener">嘶哩嘶哩</a></p></li></ol><h2 id="电影电视剧"><a class="markdownIt-Anchor" href="#电影电视剧"></a> 电影/电视剧</h2><ol><li><p><a href="https://watch.biyov.com/" target="_blank" rel="noopener">比优视频</a></p></li><li><p><a href="https://neets.cc/" target="_blank" rel="noopener">Neets</a></p></li><li><p><a href="https://www.qnmtv.com/" target="_blank" rel="noopener">青柠檬视频</a></p><p>怎么好像，其实，可能，大概，也许我不怎么看电影和电视剧 &gt;::&lt;<br />要不然就是百度大法：XXX 空格 在线</p></li></ol>]]></content>
      
      
      <categories>
          
          <category> 资源导航 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 论文 </tag>
            
            <tag> 电影 </tag>
            
            <tag> 二次元 </tag>
            
            <tag> 搜索 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>学习笔记01</title>
      <link href="/2020/01/14/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B001/"/>
      <url>/2020/01/14/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B001/</url>
      
        <content type="html"><![CDATA[<h3 id="tensorflow的安装"><a class="markdownIt-Anchor" href="#tensorflow的安装"></a> TensorFlow的安装</h3><ol><li>PyCharm创建image的项目 python版本3.6</li><li>安装tensorflow：<br />code：pip3 install tensorflow -i <a href="https://pypi.tuna.tsinghua.edu.cn/simple" target="_blank" rel="noopener">https://pypi.tuna.tsinghua.edu.cn/simple</a></li><li>测试tensorflow安装是否成功</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">import tensorflow as tf</span><br><span class="line"></span><br><span class="line">version &#x3D; tf.__version__</span><br><span class="line"></span><br><span class="line">print(&quot;tf version:&quot;, version)</span><br></pre></td></tr></table></figure><pre><code>输出：tf version: 2.1.0     tensorflow安装成功</code></pre><h3 id="opencv的安装"><a class="markdownIt-Anchor" href="#opencv的安装"></a> OpenCV的安装</h3><ol><li>pip3 install opencv-python -i <a href="https://pypi.tuna.tsinghua.edu.cn/simple" target="_blank" rel="noopener">https://pypi.tuna.tsinghua.edu.cn/simple</a></li></ol>]]></content>
      
      
      <categories>
          
          <category> 计算机视觉 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Pycharm </tag>
            
            <tag> tensorflow </tag>
            
            <tag> opencv-python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Matlab 单片机 串口 通信</title>
      <link href="/2019/11/23/Matlab%E4%B8%B2%E5%8F%A3/"/>
      <url>/2019/11/23/Matlab%E4%B8%B2%E5%8F%A3/</url>
      
        <content type="html"><![CDATA[<h4 id="1-matlab与单片机的串口通信-matlab"><a class="markdownIt-Anchor" href="#1-matlab与单片机的串口通信-matlab"></a> 1. <a href="https://blog.csdn.net/c_ycy/article/details/53883793" target="_blank" rel="noopener">Matlab与单片机的串口通信-matlab…</a></h4><pre><code>创建串口对象  设置或者修改串口通信参数  打开串口  从串口读写数据  关闭串口  </code></pre><h4 id="2-数字信号处理百度文库"><a class="markdownIt-Anchor" href="#2-数字信号处理百度文库"></a> 2. <a href="https://wenku.baidu.com/view/12259be98762caaedc33d419.html" target="_blank" rel="noopener">数字信号处理–百度文库</a></h4><p>Mathworks公司在软件中增加了设备控制箱（instrument control toolbox），提供了对RS-232/RS-485<br />通信标准串口（九针串口）通信正式支持（本实验采用USB转串口）利用该工具箱serial类及instrcallback()<br />回调函数，能可靠地进行实时串地通信。Matlab支持面向对象技术，用一个对象将计算机串口封装起来，<br />只要创建串口对象，对串口对象操作就是对串口操作，非常方便。</p><h4 id="3-matlab与stm32之间利用串口通信记录"><a class="markdownIt-Anchor" href="#3-matlab与stm32之间利用串口通信记录"></a> 3. <a href="https://blog.csdn.net/feihai_/article/details/78767371" target="_blank" rel="noopener">matlab与stm32之间利用串口通信记录</a></h4><h4 id="4-matlab串口通信"><a class="markdownIt-Anchor" href="#4-matlab串口通信"></a> 4. <a href="https://www.bilibili.com/video/av52197770?from=search&amp;seid=11921719505919685633" target="_blank" rel="noopener">Matlab串口通信</a></h4><h4 id="5-matlab-串口通信资料"><a class="markdownIt-Anchor" href="#5-matlab-串口通信资料"></a> 5. <a href="https://wenku.baidu.com/view/df50e8c62cc58bd63186bd38.html" target="_blank" rel="noopener">MATLAB 串口通信资料</a></h4><h4 id="6-matlab串口通信"><a class="markdownIt-Anchor" href="#6-matlab串口通信"></a> 6. <a href="https://wenku.baidu.com/view/1c753935b90d6c85ec3ac66c.html?sxts=1574494160601" target="_blank" rel="noopener">matlab串口通信</a></h4><h4 id="7-基于matlab-gui的串口通信编程实现"><a class="markdownIt-Anchor" href="#7-基于matlab-gui的串口通信编程实现"></a> 7. <a href="https://wenku.baidu.com/view/255d40284b73f242336c5f25.html?sxts=1574494216149" target="_blank" rel="noopener">基于Matlab GUI的串口通信编程实现</a></h4><h4 id="8-基于matlab-gui的串口通信"><a class="markdownIt-Anchor" href="#8-基于matlab-gui的串口通信"></a> 8. <a href="https://blog.csdn.net/qq_34020487/article/details/77949914" target="_blank" rel="noopener">基于MATLAB GUI的串口通信</a></h4><h4 id="9-stm32开发-串口详解"><a class="markdownIt-Anchor" href="#9-stm32开发-串口详解"></a> 9. <a href="https://blog.csdn.net/qq_29350001/article/details/80708964" target="_blank" rel="noopener">STM32开发 – 串口详解</a></h4><h4 id="10-stc51单片机串口通信-单片机端程序"><a class="markdownIt-Anchor" href="#10-stc51单片机串口通信-单片机端程序"></a> 10. <a href="https://blog.csdn.net/c_ycy/article/details/53883791" target="_blank" rel="noopener">STC51单片机串口通信-单片机端程序</a></h4><h4 id="11-matlab与51单片机通信"><a class="markdownIt-Anchor" href="#11-matlab与51单片机通信"></a> 11. <a href="https://wenku.baidu.com/view/56d4fdd3b9f3f90f76c61bdf.html" target="_blank" rel="noopener">MATLAB与51单片机通信</a></h4><h4 id="12-matlab与51单片机的串口通信"><a class="markdownIt-Anchor" href="#12-matlab与51单片机的串口通信"></a> 12. <a href="https://wenku.baidu.com/view/12259be98762caaedc33d419.html" target="_blank" rel="noopener">Matlab与51单片机的串口通信</a></h4>]]></content>
      
      
      <categories>
          
          <category> 资源导航 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Matlab </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>双击idea64.exe没反应</title>
      <link href="/2019/08/03/%E9%81%87%E5%88%B0%E7%9A%84%E5%9D%91/"/>
      <url>/2019/08/03/%E9%81%87%E5%88%B0%E7%9A%84%E5%9D%91/</url>
      
        <content type="html"><![CDATA[<p>Q:<br />idea更新后，无法打开<br />任务管理器无idea进程<br />找到安装目录下的idea64.exe和idea.bat都没反应</p><p>S:<br />编辑idea安装目录下的/bin/idea.bat<br />在末尾添加pause<br />如下：</p><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">:: ---------------------------------------------------------------------</span><br><span class="line">:: Run the IDE.</span><br><span class="line">:: ---------------------------------------------------------------------</span><br><span class="line"><span class="built_in">SET</span> OLD_PATH=<span class="variable">%PATH%</span></span><br><span class="line"><span class="built_in">SET</span> <span class="built_in">PATH</span>=<span class="variable">%IDE_BIN_DIR%</span>;<span class="variable">%PATH%</span></span><br><span class="line"></span><br><span class="line">"<span class="variable">%JAVA_EXE%</span>" <span class="variable">%ALL_JVM_ARGS%</span> -cp "<span class="variable">%CLASS_PATH%</span>" com.intellij.idea.Main %*</span><br><span class="line"></span><br><span class="line"><span class="built_in">SET</span> <span class="built_in">PATH</span>=<span class="variable">%OLD_PATH%</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">pause</span></span><br></pre></td></tr></table></figure><p>然后再双击运行idea.bat<br />控制台输出信息中显示：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Error occurred during initialization of VM  </span><br><span class="line">Initial heap size set to a larger value than the maximum heap size  </span><br><span class="line">Press any key to continue . . .</span><br></pre></td></tr></table></figure><p>更改文件idea64.exe.vmoptions中的配置信息为：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">-Xms128m</span><br><span class="line">-Xmx2048m</span><br></pre></td></tr></table></figure><p>idea64.exe.vmoptions文件在C:\Users\用户名.版本名\config下还有一个哟！</p><hr /><p>See You。。</p><p>反正都是写给我自己看哒，所以就这个样吧，记得第一次遇到这问题干脆把idea重装一哈<br />然后，就又遇到了，搞得我当时就觉得这idea是不敢更新了。这次解决了嘛，开心，开心</p>]]></content>
      
      
      <categories>
          
          <category> 遇到的坑 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> idea </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>个人学习资源导航 【11-20】</title>
      <link href="/2019/07/22/%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99%E5%BD%92%E6%A1%A311-20/"/>
      <url>/2019/07/22/%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99%E5%BD%92%E6%A1%A311-20/</url>
      
        <content type="html"><![CDATA[<h4 id="11小程序-慕课网"><a class="markdownIt-Anchor" href="#11小程序-慕课网"></a> 11.小程序 慕课网</h4><p><a href="https://pan.baidu.com/s/1yDX6_I1nORpIhd8DZ7Oa1w" target="_blank" rel="noopener">百度网盘链接</a><br />提取码：xbkq</p><h4 id="12慕课网安卓零基础到实战"><a class="markdownIt-Anchor" href="#12慕课网安卓零基础到实战"></a> 12.慕课网—安卓零基础到实战</h4><p><a href="https://pan.baidu.com/s/1rdPNpwg-uMhd_1TvQA9vrQ" target="_blank" rel="noopener">百度网盘链接</a><br />提取码：pnos</p><h4 id="13网络攻击相关"><a class="markdownIt-Anchor" href="#13网络攻击相关"></a> 13.网络攻击相关</h4><p><a href="https://pan.baidu.com/s/14eCCR4ns7pb8ZnbHjX4fIw" target="_blank" rel="noopener">百度网盘链接</a><br />提取码：t25w</p><h4 id="14小白-菜鸟黑客教程"><a class="markdownIt-Anchor" href="#14小白-菜鸟黑客教程"></a> 14.小白、菜鸟黑客教程</h4><p><a href="https://pan.baidu.com/s/1x_sumbLSQGMBZy4rWaocRg" target="_blank" rel="noopener">百度网盘链接</a><br />提取码：t05u</p><h4 id="15-winhex数据恢复教程"><a class="markdownIt-Anchor" href="#15-winhex数据恢复教程"></a> 15. winhex数据恢复教程</h4><p><a href="https://pan.baidu.com/s/18iYMCfp2H7VL-giVXwmzfA" target="_blank" rel="noopener">百度网盘链接</a><br />提取码：jetr</p><h4 id="16图灵程序设计丛书"><a class="markdownIt-Anchor" href="#16图灵程序设计丛书"></a> 16.图灵程序设计丛书</h4><p><a href="https://pan.baidu.com/s/1Ss4J5U_dDgHk7MrNx-J_zg" target="_blank" rel="noopener">百度网盘链接</a><br />提取码：p8ot</p><h4 id="17千峰java基础"><a class="markdownIt-Anchor" href="#17千峰java基础"></a> 17.千峰JAva基础</h4><p><a href="https://pan.baidu.com/s/1kdzVOe-rTTuoAWtWwhwWAg" target="_blank" rel="noopener">百度网盘链接</a><br />提取码：bqdn</p><h4 id="18千峰java进阶"><a class="markdownIt-Anchor" href="#18千峰java进阶"></a> 18.千峰JAva进阶</h4><p><a href="https://pan.baidu.com/s/1WFVD-NtUbg9M2kzxGTFwhg" target="_blank" rel="noopener">百度网盘链接</a><br />提取码：wmjs</p><h4 id="19shark恒零基础百集vip破解教程-高清无密官方原版"><a class="markdownIt-Anchor" href="#19shark恒零基础百集vip破解教程-高清无密官方原版"></a> 19.《Shark恒零基础百集VIP破解教程》 - 高清无密官方原版</h4><p><a href="https://pan.baidu.com/s/1P-ratIU-E9UZqdPHdWzVnQ" target="_blank" rel="noopener">百度网盘链接</a><br />提取码：8rej</p><h4 id="20密码学原理"><a class="markdownIt-Anchor" href="#20密码学原理"></a> 20.密码学原理</h4><p><a href="https://pan.baidu.com/s/1NinzYKUMPS84LMyjd5s5XQ" target="_blank" rel="noopener">百度网盘链接</a><br />提取码：lzhv</p>]]></content>
      
      
      <categories>
          
          <category> 资源导航 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网盘资料 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>个人学习资源导航 【1-10】</title>
      <link href="/2019/06/27/%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99%E5%BD%92%E6%A1%A31-10/"/>
      <url>/2019/06/27/%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99%E5%BD%92%E6%A1%A31-10/</url>
      
        <content type="html"><![CDATA[<h4 id="1猴博士网课全集"><a class="markdownIt-Anchor" href="#1猴博士网课全集"></a> 1.猴博士网课全集</h4><p><a href="https://pan.baidu.com/s/1tsdv7UL2iBPsglzlvQIF4A" target="_blank" rel="noopener">百度网盘链接</a><br />提取码：ogyd</p><h4 id="2java系列学习资源-1"><a class="markdownIt-Anchor" href="#2java系列学习资源-1"></a> 2.Java系列学习资源-1</h4><p><a href="https://pan.baidu.com/s/1_L2ssXRqpRDRZB771BCpbQ" target="_blank" rel="noopener">百度网盘链接</a><br />提取码：morc</p><h4 id="3kali吧大型渗透培训课程2015逆丶小战"><a class="markdownIt-Anchor" href="#3kali吧大型渗透培训课程2015逆丶小战"></a> 3.Kali吧大型渗透培训课程2015（逆丶小战）</h4><p><a href="https://pan.baidu.com/s/1eWXcV6PwYUj58h_byndmjg" target="_blank" rel="noopener">百度网盘链接</a><br />提取码：rn3v</p><h4 id="4日语学习资料"><a class="markdownIt-Anchor" href="#4日语学习资料"></a> 4.日语学习资料</h4><p><a href="https://pan.baidu.com/s/19VavNfLxsAY6fflfsd1L9w" target="_blank" rel="noopener">百度网盘链接</a><br />提取码：upbi</p><h4 id="5kali-linux"><a class="markdownIt-Anchor" href="#5kali-linux"></a> 5.Kali Linux</h4><p><a href="https://pan.baidu.com/s/12NMhpEuZO_4jDRyMeRmYxA" target="_blank" rel="noopener">百度网盘链接</a><br />提取码：tyb5</p><h4 id="6kali"><a class="markdownIt-Anchor" href="#6kali"></a> 6.Kali</h4><p><a href="https://pan.baidu.com/s/1DfdRiQ1zH8onUTZevayjLg" target="_blank" rel="noopener">百度网盘链接</a><br />提取码：xzp1</p><h4 id="72019考虫考研"><a class="markdownIt-Anchor" href="#72019考虫考研"></a> 7.2019【考虫】考研</h4><p><a href="https://pan.baidu.com/s/1TqxwbfPLbYqSyEen7eIKNA" target="_blank" rel="noopener">百度网盘链接</a><br />提取码：362k</p><h4 id="8python零基础爬虫到高级全套资料"><a class="markdownIt-Anchor" href="#8python零基础爬虫到高级全套资料"></a> 8.python零基础爬虫到高级全套资料</h4><p><a href="https://pan.baidu.com/s/1FNnt8vm7iY_Dao5Kd9W2sw" target="_blank" rel="noopener">百度网盘链接</a><br />提取码：wxac</p><h4 id="9python进阶篇"><a class="markdownIt-Anchor" href="#9python进阶篇"></a> 9.python进阶篇</h4><p><a href="https://pan.baidu.com/s/1Q_LEW8Iy4rCHOvB0jdxgBQ" target="_blank" rel="noopener">百度网盘链接</a><br />提取码：rigp</p><h4 id="10java学习相关电子书籍"><a class="markdownIt-Anchor" href="#10java学习相关电子书籍"></a> 10.Java学习相关电子书籍</h4><p><a href="https://pan.baidu.com/s/162GtpFMtOjQensZAcE3KHg" target="_blank" rel="noopener">百度网盘链接</a><br />提取码：0ax1</p>]]></content>
      
      
      <categories>
          
          <category> 资源导航 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网盘资料 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>那些年我追过的滑稽【41-60】</title>
      <link href="/2019/05/19/%E7%95%AA%E5%89%A7%E5%BD%92%E6%A1%A341-60/"/>
      <url>/2019/05/19/%E7%95%AA%E5%89%A7%E5%BD%92%E6%A1%A341-60/</url>
      
        <content type="html"><![CDATA[<h4 id="41记录的地平线"><a class="markdownIt-Anchor" href="#41记录的地平线"></a> 41.<a href="https://www.bilibili.com/bangumi/media/md289/" target="_blank" rel="noopener"><strong>记录的地平线</strong></a></h4><pre><code>上映时间：2013年10月5日 开播 已完结, 全2季简介：某天，老牌网游《elder·tail》突然发生异常，约三万名日本用户被囚禁在了游戏中。游戏龄8年的大学生城惠也被卷入了异世界中，被迫不断与怪物战斗。被不安驱使的玩家充斥街头，大和地区最大的都市“秋叶原”就这样失去了秩序。如同孤高的狼一般自负的城惠与自己的老朋友·直继，美少女刺客·晓一起创立了公会“记录的地平线”。不擅交往的内向年轻人与他的伙伴们，一起踏上了从废墟丘耶园开始改变世界的旅程……角色声优：城惠：寺岛拓笃直继：前野智昭晓：加藤英美里艾札克：日野聪威廉·马萨诸塞：中村悠一克拉斯提：樱井孝宏喵太：中田让治实莉：田村奈央冬弥：山下大辉</code></pre><h4 id="42刀剑神域-alicization"><a class="markdownIt-Anchor" href="#42刀剑神域-alicization"></a> 42.<a href="https://www.bilibili.com/bangumi/media/md130412/" target="_blank" rel="noopener"><strong>刀剑神域 Alicization</strong></a></h4><pre><code>上映时间：2018年10月7日 开播 已完结, 全24话简介：【本片翻译由版权方提供】“这里是哪儿”察觉到的时候，桐人不知为什么陷入了庞大的幻想风格虚拟世界。登录前的记忆模糊不清，只得在周围徘徊寻找线索。之后，他同一名少年相遇了。“我的名字是尤吉欧。请多关照，桐人君。”少年是在虚拟世界的居民，即“NPC”，但是却如同人类一样“感情丰富”。在和尤吉欧加深交往的同时，桐人也在摸索着登出这个世界的方法。在桐人的脑海中，某一个记忆苏醒了。那是幼年时的桐人和尤吉欧在山野奔跑的记忆——不可能存在的记忆。在那个回忆中，有着一个金发少女的身影。她的名字，是爱丽丝，是绝对不应该忘记的、重要的名字角色声优：桐人（桐谷和人）：松冈祯丞亚丝娜（结城明日奈）：户松遥爱丽丝：茅野爱衣尤吉欧：岛崎信长赛鲁卡：前田佳织里罗妮耶·亚拉贝尔：近藤玲奈蒂洁·修特利尼：石原夏织神代凛子：小林沙苗菊冈诚二郎：森川智之莱欧斯·安提诺斯：岩濑周平温贝尔·吉泽克：木岛隆一索尔狄丽娜·塞路尔特：潘惠美沃罗·利凡玎：村田太志诗乃（朝田诗乃）：泽城美雪强尼·布莱克（金本敦）：逢坂良太西莉卡（绫野珪子）：日高里菜莉兹贝特（筱崎里香）：高垣彩阳</code></pre><h4 id="43刀剑神域"><a class="markdownIt-Anchor" href="#43刀剑神域"></a> 43.<a href="https://www.bilibili.com/bangumi/media/md24755609/" target="_blank" rel="noopener"><strong>刀剑神域</strong></a></h4><pre><code>上映时间：2012年7月7日 开播 已完结, 全2季简介：2022年，人类实现了现实世界和假想空间的融合，电子制造商开发了名为《刀剑神域（Sword Art Online）》的在线电子游戏。SAO甫一面世便大受好评，限量一万份的名额在发售当天的短时间内便被抢购一空。通过联网，玩家可以身临其境进入充满想象力和异域风情的游戏世界——浮游城市艾恩葛朗特。玩家在这里可以生活、练武、升级、经商、探险，与真实世界别无二致，却拥有无上的乐趣。曾是少数封测玩家的桐人也是这一万名幸运者中的一员。最初的兴奋过后，玩家们却发现根本无法顺利登出游戏，更为恐怖的是，一旦玩家的HP归零，现实世界中他们的肉体也将死亡。他们被SAO的开发者茅场晶彦困在游戏中，顺利逃脱的方法似乎只有一个，那就是完成困难重重的攻略任务……角色声优：桐人／桐谷和人：松冈祯丞亚丝娜／结城明日奈：戸松遥结衣：伊藤加奈惠莉法／桐谷直叶：竹达彩奈克莱因／壶井辽太郎：平田広明艾基尔／安德鲁·基尔博德·密鲁兹：安元洋贵幸：早见沙织</code></pre><h4 id="44她与她的猫"><a class="markdownIt-Anchor" href="#44她与她的猫"></a> 44.<a href="https://www.bilibili.com/bangumi/media/md3375/" target="_blank" rel="noopener"><strong>她与她的猫</strong></a></h4><pre><code>上映时间：2016年3月4日 开播 已完结, 全4话简介：本动画片以一只公猫的视角，讲述了“他”与女主人在同一个屋檐下所过的略带感伤的淡然日子。很久之前的某天，“他”被美丽温柔的女孩捡回家，开始了自认幸福无比的生活。女孩孤身一人，做着一份“他”不知也不介意为何的工作，“他”在意的是女孩很早出门时的那副面庞、身上的那缕清香、问候“他”时的那声淡语以及爱抚“他”时的那份轻柔……以致后来，一只名叫“美美”的猫咪向“他”表白爱意时，“他”婉言拒绝——“他”早已被女孩深深征服。然而，一个个季节逝去，“他”终究无法抚慰她寂寞的心灵。角色声优：她：花泽香菜黑猫：浅沼晋太郎友人：矢作纱友里母亲：平松晶子</code></pre><h4 id="45秒速五厘米"><a class="markdownIt-Anchor" href="#45秒速五厘米"></a> 45.<a href="https://www.bilibili.com/bangumi/media/md2688/" target="_blank" rel="noopener"><strong>秒速五厘米</strong></a></h4><pre><code>上映时间：2007年3月3日 开播 已完结, 全1话简介：秒速五厘米是日本导演新海诚在2007年发布的动画电影，全作由《樱花抄》、《宇航员》和《秒速五厘米》三话组成。导演结合樱花、电车、卫星等美丽的意象，讲述了围绕着男主角远野贵树和女主角篠原明里、澄田花苗之间所发生的唯美而又忧伤的故事。少年远野贵树与少女筱原明里，这两人是幼时的同班同学兼好友，但自从小学毕业之后却没能再见一次面。分隔两地的贵树与明里一直靠书信保持联络，直到贵树知道自己即将举家搬到鹿儿岛那个遥远的地方。两人约定了见面的时间，但计划好的行程偏偏却遇上了暴风雪……。角色声优：远野贵树：水桥研二篠原明里：近藤好美、尾上绫华澄田花苗：花村怜美卓比：新海诚</code></pre><h4 id="46四月是你的谎言"><a class="markdownIt-Anchor" href="#46四月是你的谎言"></a> 46.<a href="https://www.bilibili.com/bangumi/media/md1699/" target="_blank" rel="noopener"><strong>四月是你的谎言</strong></a></h4><pre><code>上映时间：2014年10月9日 开播 已完结, 全22话简介：从小接受母亲严格的钢琴训练，并在各种音乐比赛上获胜的“神童”——有马公生，11岁那年因为母亲去世，他从此变得听不见钢琴的声音，因而放弃了弹奏钢琴。国中三年级时，在青梅竹马椿的引见下，公生认识了与他同年级的小提琴手——宫园薰，并于一场比赛中被薰自由奔放的演奏风格所吸引。自此，公生的日常生活开始有了改变。角色声优：有马公生：花江夏樹宫园薰：種田梨沙泽部椿：佐倉綾音渡亮太：逢坂良太有马早希：能登麻美子相座武士：梶裕貴井川绘见：早見沙織相座凪：茅野愛衣濑户纮子：園崎未恵</code></pre><h4 id="47darker-than-black-黑之契约者-"><a class="markdownIt-Anchor" href="#47darker-than-black-黑之契约者-"></a> 47.<a href="https://www.bilibili.com/bangumi/media/md1064/" target="_blank" rel="noopener"><strong>DARKER THAN BLACK -黑之契约者-</strong></a></h4><pre><code>上映时间：2007年4月5日 开播 已完结, 全2季简介：某日，东京突然出现了异象——无法解析的领域“地狱门”。在那里，有着人们从未见过并持有着超能力的来访者。人们称这些来访者为“契约者”，他们有的失去心智，甚至会残酷地杀害人类……“契约者”们来到东京，究竟意欲何为？角色声优：黑：入野自由、木内秀信银：福圓美里猫：沢木郁也雾原未咲：水樹奈々斎藤雄介：志村知幸茅沼キコ：加藤英美里ジュライ：浅井清己黄：池田勝</code></pre><h4 id="48通灵妃-河南话版"><a class="markdownIt-Anchor" href="#48通灵妃-河南话版"></a> 48.<a href="https://www.bilibili.com/bangumi/media/md4313302/" target="_blank" rel="noopener"><strong>通灵妃 河南话版</strong></a></h4><pre><code>上映时间：2018年12月6日 开播 连载中, 每周四更新简介：《通灵妃》河南话配音版。丞相府大小姐千云兮自小身负异能，被视为不祥之人养在灵云山上，16岁这年代替妹妹千云裳嫁入夜王府，传说夜幽冥性情古怪，冷酷残暴，千云兮将面临的会是怎样的处境呢……</code></pre><h4 id="49在下坂本有何贵干"><a class="markdownIt-Anchor" href="#49在下坂本有何贵干"></a> 49.<a href="https://www.bilibili.com/bangumi/media/md3450/" target="_blank" rel="noopener"><strong>在下坂本，有何贵干？</strong></a></h4><pre><code>上映时间：2016年4月8日 开播 已完结, 全13话简介：于日本县立学文高中之中，有一名叫坂本的全能高中生，平常总是用著各种超乎常理的无厘头行为来完成各种琐事，导致周遭所有女性同学都对他钦佩绝倒，同时也引起所有男性同学的无限嫉妒。但不管面对其他人如何刁难，坂本总是能用各种帅气方式来让他人甘拜下风。</code></pre><h4 id="50狐妖小红娘"><a class="markdownIt-Anchor" href="#50狐妖小红娘"></a> 50.<a href="https://www.bilibili.com/bangumi/media/md2543/" target="_blank" rel="noopener"><strong>狐妖小红娘</strong></a></h4><pre><code>上映时间：2015年6月26日 开播 连载中简介：根据古典小说记载，世上有人有妖，妖会与人相恋，妖寿命千年，人的寿命有限，人死了，妖活着。人会投胎转世，但投胎以后不记得上辈子的爱。妖如果痴情的话，就去找狐妖“购买”一项服务，让投胎转世的人回忆起前世的爱……狐妖红娘这个角色就为此而诞生。作品主要讲述了以红娘为职业的狐妖，在为前世恋人牵红线的过程中发生的一系列有趣、神秘的故事。角色声优：白月初：杨天翔涂山苏苏：刘校妤涂山红红：刘校妤东方月初：张杰涂山雅雅：张凯涂山容容：乔诗语梵云飞：边江厉雪扬：唐小喜清瞳：阎萌萌王权富贵：魏超王权家主：范哲琛师妹/东方淮竹：丽阳</code></pre><h4 id="51钢壳都市雷吉欧斯"><a class="markdownIt-Anchor" href="#51钢壳都市雷吉欧斯"></a> 51.<a href="https://www.bilibili.com/bangumi/media/md1092/" target="_blank" rel="noopener"><strong>钢壳都市雷吉欧斯</strong></a></h4><pre><code>上映时间：2009年1月10日 开播 已完结, 全24话简介：在遥远的时间尽头，世界受到大规模污染之后，大地被新的主宰污染兽所占领，将人类逼至濒临灭绝的窘境。幸存的人类在远古炼金术师遗留下的自律型移动都市中生活。这些移动都市各自拥有自己独立意识及功能，有专属交通的都市也有专属教育类的学院都市。赌上各自的存亡，都市与都市之间被操控着进行战争。还有能够覆盖天地的巨大怪物“污染兽”群。少年少女们为了保护自己的都市，使用超能力“刭”不断进行战斗。故事就发生于无数都市中的其中一个学院都市洁尔尼，在新生入学仪式上，由两个敌对都市的学生引发的骚乱险些造成踩踏事故；在混乱之中，来自于枪壳都市古莲达的普通教育系新生雷弗救下了一名少女。由此，被学生会长以学费全免为条件由一般教育系转入了武技系，并被...</code></pre><h4 id="52盾之勇者成名录"><a class="markdownIt-Anchor" href="#52盾之勇者成名录"></a> 52.<a href="https://www.bilibili.com/bangumi/media/md4316482/" target="_blank" rel="noopener"><strong>盾之勇者成名录</strong></a></h4><pre><code>上映时间：2019年1月2日 开播简介：极为平凡的御宅族大学生·岩谷尚文，受到在图书馆发现的一本书所引导，被召唤到了异世界。他被赋予的使命，是作为装备着剑、枪、弓、盾的四圣勇者之一“盾之勇者”，驱逐给世界带来混沌的灾害“波”。因为大冒险而心潮澎湃，和同伴一同踏上旅程的尚文。但，他刚出发没几天就遭到背叛，金钱和立场全都失去。变得无法相信他人的尚文，驱使着奴隶少女·拉芙塔莉雅，向波和世界发起对抗——。究竟他能否打破这种绝望的状况？失去一切的男人的成名奇幻故事，开幕。</code></pre><h4 id="53贤者之孙"><a class="markdownIt-Anchor" href="#53贤者之孙"></a> 53.<a href="https://www.bilibili.com/bangumi/media/md22503880/" target="_blank" rel="noopener"><strong>贤者之孙</strong></a></h4><pre><code>上映时间：2019年4月10日 开播简介：因意外过世的青年，转生到剑与魔法世界──强到破天荒!!!?理应意外身亡的青年，以婴儿姿态转世到了异世界!? 接着他被称为「贤者」的男人──梅林捡回家收养，取名为「西恩」。西恩在贤者身边学习魔法，并顺利地成长，然而，他有一个致命的问题……没错，西恩十五岁时，梅林说了──「老夫忘记教常识了」!!「毫无常识」且「规格外」的主角所呈献，异世界奇幻生活开幕！</code></pre><h4 id="54carole-tuesday"><a class="markdownIt-Anchor" href="#54carole-tuesday"></a> 54.<a href="https://www.bilibili.com/bangumi/media/md24097891/" target="_blank" rel="noopener"><strong>CAROLE &amp; TUESDAY</strong></a></h4><pre><code>上映时间：2019年4月10日 开播简介：距离人类移居到新的基地火星已经过了50年。这个时代中大多数的文化均由AI创造，人类只需要享受即可。有一位少女，生活在首都阿尔巴市，在工作之余的空闲时间里想努力成为一名音乐家，但她总感觉缺少些什么，她的名字叫Carole。有一位女孩，出生在赫舍尔市的富裕家庭，她的梦想是成为一名音乐家，但是周围却没有人能够理解她，她觉得自己是全世界最孤独的人，她的名字是Tuesday。一个机遇使得两人相遇。她们希望歌唱，她们希望放声。如果是两个人一起的话，她们觉得就能做到。她们也许只会掀起微小波澜，但这微小的波澜却可能会化作巨浪...角色声优：Carole：岛袋美由利Tuesday：市之濑加那Angela：上坂堇Gus：大冢明夫Tao：神谷浩史Roddy：入野自由Ertegun：宫野真守</code></pre><h4 id="55青春猪头少年不会梦到兔女郎学姐"><a class="markdownIt-Anchor" href="#55青春猪头少年不会梦到兔女郎学姐"></a> 55.<a href="https://www.bilibili.com/bangumi/media/md134932/" target="_blank" rel="noopener"><strong>青春猪头少年不会梦到兔女郎学姐</strong></a></h4><pre><code>上映时间：2018年10月4日 开播 已完结, 全13话简介：青春期症候群——这是一种只发生在易敏感和不稳定的青春期的、不可思议的现象。例如，在梓川咲太面前出现的野生兔女郎。她的真实身份是高中高年级学生，明星活动休止的女演员樱岛麻衣。她迷人的身姿，不知为何在周围的人眼里看不出来。咲太决定解开这一谜题。在与麻衣一起度过的时间里，咲太知道了她秘密的想法……女主人公们一个接一个地出现在咲太的周围，她们都有着“青春期症候群”。在天空和大海都很闪耀的小镇上，开始了令人激动的故事。角色声优：梓川咲太：石川界人樱岛麻衣：濑户麻沙美梓川枫：久保由利香古贺朋绘：东山奈央双叶理央：种崎敦美丰浜和香：内田真礼牧之原翔子：水濑祈国见佑真：内田雄马</code></pre><h4 id="56比宇宙更远的地方"><a class="markdownIt-Anchor" href="#56比宇宙更远的地方"></a> 56.<a href="https://www.bilibili.com/bangumi/media/md13032/" target="_blank" rel="noopener"><strong>比宇宙更远的地方</strong></a></h4><pre><code>上映时间：2018年1月2日 开播 已完结, 全13话简介：无论何时，我们的第一步总是从好奇心开始。不曾看过的风景，不曾听过的声音，不曾闻过的味道，不曾摸过的质感，不曾尝过的食物，以及不曾感受过的澎湃。为了重拾不知何时忘却的记忆碎片和不知何时舍弃的感动的旅途。在到达终点的时候，我们会想些什么呢？40度的咆哮，50度的疯狂，60度的呐喊，跨越荒芜的海源到达原生地域。在地球的天边，远离文明的南方尽头。这是向南极（比宇宙更远的地方）进发的四位女孩子的旅行物语。我们通过她们回想起生于明日的光辉！</code></pre><h4 id="57可塑性记忆"><a class="markdownIt-Anchor" href="#57可塑性记忆"></a> 57.<a href="https://www.bilibili.com/bangumi/media/md1552/" target="_blank" rel="noopener"><strong>可塑性记忆</strong></a></h4><pre><code>上映时间：2015年4月4日 开播 已完结, 全13话简介：故事发生在一个比现在的科学更加进步的世界。18岁的水柿司高考失败，多亏父母找关系得以进入大企业SAI社工作。SAI社是制造管理拥有感情的人形智能机器人（通称：Giftia）的企业，司在其中被安排到终端服务部门工作。这个部门其实就是回收即将到期的Giftia，是所谓的“窗边部门（不被重视的部门）”。于是司和打杂的Giftia少女“艾拉”组成搭档，一起开始了工作……角色声优：水柿司：内匠靖明艾拉：雨宫天绢岛满：赤崎千夏扎克：矢作纱友里桑乃实香月：丰口惠美康斯坦斯：日野聪缥康隆：津田健次郎雪莉：爱美海松艾露：上坂堇山野边孝雄：飞田展男</code></pre><h4 id="58哥布林杀手"><a class="markdownIt-Anchor" href="#58哥布林杀手"></a> 58.哥布林杀手</h4><p><a href="http://www.dilidili.name/anime/GoblinSlayer/" target="_blank" rel="noopener">地址1:</a><br /><a href="http://www.zzzfun.com/vod-detail-id-1194.html" target="_blank" rel="noopener">地址2:</a></p><pre><code>上映时间：2018年10月简介：凭借疯狂杀戮哥布林的哥布林杀手在公会排位第三还获得了「哥布林杀手」的称号，而女主角（之一）叫做女神官在首次外出组队挑战哥布林时队伍几乎遭到了全灭，幸好哥布林杀手及时出现救了女神官一命，后来女神官就和哥布林杀手组队一起冒险，除此之外还有妖精弓手、牧牛少女、柜台小姐等女性对哥布林杀手很有好感。</code></pre><h4 id="59来自多彩世界的明天"><a class="markdownIt-Anchor" href="#59来自多彩世界的明天"></a> 59.来自多彩世界的明天</h4><p><a href="http://www.dilidili.name/anime/laiziduocaishijiedemingtian/" target="_blank" rel="noopener">地址1:</a><br /><a href="http://www.zzzfun.com/vod-detail-id-1195.html" target="_blank" rel="noopener">地址2:</a></p><pre><code>上映时间：2018年10月简介：故事的开端是数十年后。日常之中残留些微的魔法，略显不可思议的世界。主人公月白瞳美17岁，是魔法使一族的末裔。她自幼就失去了色觉，并变得缺乏感情。身为大魔法使的祖母月白琥珀担心着瞳美的将来，使用魔法将瞳</code></pre><h4 id="60空战魔导士候补生的教官"><a class="markdownIt-Anchor" href="#60空战魔导士候补生的教官"></a> 60.<a href="https://www.bilibili.com/bangumi/media/md2583/" target="_blank" rel="noopener"><strong>空战魔导士候补生的教官</strong></a></h4><pre><code>上映时间：2015年7月8日 开播 已完结, 全12话简介：世界受“魔甲虫”威胁，大地遭其占据，人类只能住在天空中的浮游都市里。之后，以魔力对抗“魔甲虫”的魔法师——空战魔导士诞生了。就读空战魔导士培育机构——学园浮游都市“密斯特岗”的彼方·英司，是拥有“黑之剑圣”称号的S128特务小队的王牌。然而，如今他却被视为“特务小队的叛徒”而受到众人的轻蔑与厌恶……某天，彼方被任命为连战皆败的E601小队教官。这支小队收容了三名个性特异的少女——？由叛徒与问题学生少女们展开的进击，现在启动！</code></pre>]]></content>
      
      
      <categories>
          
          <category> ACG </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 番剧 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>那些年我追过的滑稽【21-40】</title>
      <link href="/2019/05/18/%E7%95%AA%E5%89%A7%E5%BD%92%E6%A1%A321-40/"/>
      <url>/2019/05/18/%E7%95%AA%E5%89%A7%E5%BD%92%E6%A1%A321-40/</url>
      
        <content type="html"><![CDATA[<h4 id="21re创造主"><a class="markdownIt-Anchor" href="#21re创造主"></a> 21.<a href="https://www.bilibili.com/bangumi/media/md5998/" target="_blank" rel="noopener"><strong>Re：创造主</strong></a></h4><pre><code>上映时间：2017年4月9日 开播 已完结, 全22话角色声优:  水筱飒太：山下大輝  セレジア・ユピティリア：小松未可子  メテオラ・エスターライヒ：水瀬いのり  アリステリア・フェブラリィ：日笠陽子  煌樹まみか：村川梨衣  弥勒寺优夜：鈴村健一  鹿屋瑠伟：雨宮天  STAFF:  导演：あおきえい  人物设定：牧野竜一  原作：広江礼威  人物原案：広江礼威  系列构成：あおきえい、広江礼威  色彩设计：篠原真理子  美术监督：永吉幸樹  音乐：澤野弘之  </code></pre><h4 id="22月色真美"><a class="markdownIt-Anchor" href="#22月色真美"></a> 22.<a href="https://www.bilibili.com/bangumi/media/md5989/" target="_blank" rel="noopener"><strong>月色真美</strong></a></h4><pre><code>上映时间：2017年4月6日 开播 已完结, 全12话角色声优:  安昙小太郎：千葉翔也  水野茜：小原好美  比良拓海：田丸篤志  西尾千夏：村川梨衣  泷泽葵：白石晴香  山科ろまん：筆村栄心  小笠原大地：金子誠  宫本心咲：石見舞菜香  佐藤节子：鈴木美園  STAFF:脚本：柿原優子  导演：岸誠二  人物设定：森田和明  摄影监督：中村雄太  系列构成：柿原優子  人物原案：loundraw  色彩设计：伊藤さき子  美术监督：安田ゆかり  音乐：伊賀拓郎  </code></pre><h4 id="23星之声"><a class="markdownIt-Anchor" href="#23星之声"></a> 23.<a href="https://www.bilibili.com/bangumi/media/md2544/" target="_blank" rel="noopener"><strong>星之声</strong></a></h4><pre><code>上映时间：2002年2月2日 开播 已完结, 全1话长峰美加子：筱原美香（导演版） / 武藤寿美（声优版）  寺尾 升：新海诚（导演版） / 铃木千寻（声优版）  STAFF:  脚本、监督、影像、制作：新海诚  音乐：天门  主题曲：“THROUGH THE YEARS AND FAR AWAY(HELLO, LITTLE STAR)”  作曲：天门  作词：K. JUNO  演唱：Low  发行：CoMix Wave  </code></pre><h4 id="24紫罗兰永恒花园"><a class="markdownIt-Anchor" href="#24紫罗兰永恒花园"></a> 24.<a href="https://www.bilibili.com/bangumi/media/md8892/" target="_blank" rel="noopener"><strong>紫罗兰永恒花园</strong></a></h4><pre><code>上映时间：2018年1月11日 开播 已完结, 全14话角色声优:  薇尔莉特•伊芙加登：石川由依  克劳迪亚·霍金斯： 子安武人  基尔伯特·布甘比利亚： 浪川大輔  嘉德丽雅·波德莱尔： 遠藤綾  贝内迪克特·布卢： 内山昂輝  埃丽卡·布朗： 茅原実里  艾丽斯·卡纳利： 戸松遥  STAFF:  导演：石立太一  剧本统筹：吉田玲子  角色设计、作画指导：高濑亚贵子  系列演出：藤田春香  世界观设定：铃木昭贵  音效指导：鹤冈阳太  原画：岩崎菜美、多田文雄、冈村公平、泽真平、丸木宣明、佐藤达也、门胁未来  动画检查：黑田比吕子  色彩设计：米田侑加  特殊效果：三浦理奈  美术：渡边美希子  3D美术：鹈ノ口穣二  摄影指导：船本孝平  3D导演：山本 伦  3DCG：梅津哲郎  音乐：Evan Call  动画制作：京都アニメーション（京都动画）  </code></pre><h4 id="25齐木楠雄的灾难"><a class="markdownIt-Anchor" href="#25齐木楠雄的灾难"></a> 25.<a href="https://www.bilibili.com/bangumi/media/md5069/" target="_blank" rel="noopener"><strong>齐木楠雄的灾难</strong></a></h4><pre><code>上映时间：2016年7月11日 开播 已完结, 全2季角色声优：  齐木楠雄：神谷浩史  海藤瞬：岛崎信长  燃堂力：小野大辅  齐木国春：岩田光央  齐木久留美：爱河里花子  照桥心美：茅野爱衣  梦原知予：田村由加莉  灰吕杵志：日野聪  鸟束零太：花江夏树STAFF：  原作：麻生周一  监督：樱井弘明  系列构成：横手美智子  角色设计：音地正行  动画制作：EGG FIRM×J.C.STAFF  制作：小学馆集英社Production  </code></pre><h4 id="26书店里的骷髅店员本田"><a class="markdownIt-Anchor" href="#26书店里的骷髅店员本田"></a> 26.<a href="https://www.bilibili.com/bangumi/media/md134952/" target="_blank" rel="noopener"><strong>书店里的骷髅店员本田</strong></a></h4><pre><code>上映时间：2018年10月8日 开播 已完结, 全12话</code></pre><h4 id="27言叶之庭"><a class="markdownIt-Anchor" href="#27言叶之庭"></a> 27.<a href="https://www.bilibili.com/bangumi/media/md2546/" target="_blank" rel="noopener"><strong>言叶之庭</strong></a></h4><pre><code>上映时间：2013年5月31日 开播 已完结, 全1话角色声优：秋月孝雄：入野自由  雪野百香里：花泽香菜  孝雄的母亲：平野文  孝雄的哥哥：前田刚  孝雄哥哥的女友：寺崎裕香  松本：井上优  佐藤：潘惠美  相泽：小松未可子STAFF：原作：新海诚  监督：新海诚  脚本·分镜·演出：新海诚  角色设计：土屋坚一  作画监督：土屋坚一  美术监督：泷口比吕志  音乐：KASHIWA Daisuke  色彩设计：三木阳子、新海诚  音响监督：山田阳  摄影监督：新海诚  动画制作：CoMix Wave Films  发行：东宝映像事业部  </code></pre><h4 id="28落第骑士英雄谭"><a class="markdownIt-Anchor" href="#28落第骑士英雄谭"></a> 28.<a href="https://www.bilibili.com/bangumi/media/md2743/" target="_blank" rel="noopener"><strong>落第骑士英雄谭</strong></a></h4><pre><code>上映时间：2015年10月3日 开播 已完结, 全12话角色声优：黑铁一辉：逢坂良太  史黛菈·法米利昂：石上静香  黑铁珠雫：东山奈央  有栖院凪：浅沼晋太郎  绫辻绚濑：小林优  东堂刀华：金元寿子  新宫寺黑乃：东内麻里子  日下部加加美：相坂优歌  西京宁音：井口裕香  STAFF：  原作：海空陆  监督：大沼心  脚本：猪爪慎一、ヤスカワショウゴ、河锅俊  分镜：大沼心、玉村仁、泽井幸次、德本善信、二瓶勇一、细田直人、ジミー·ストーン  演出：大沼心、玉村仁、横田一平、野上和男、高村雄太、ジミー·ストーン、福多润  系列构成：安川正吾  角色原案：WON  角色设计：小松原圣  色彩设计：山口真奈美  美术监督：古贺彻  作画监督： 野田康行、明珍宇作、松冈秀明、村上龙之介、武本大介、小松原圣  音响监督：明田川仁  音乐：中川幸太郎  3D监督：滨村敏郎  摄影监督：广冈岳  编辑：坪根健太郎  动画制作：SILVER LINK./NEXUS  </code></pre><h4 id="29云之彼端约定的地方"><a class="markdownIt-Anchor" href="#29云之彼端约定的地方"></a> 29.<a href="https://www.bilibili.com/bangumi/media/md2545/" target="_blank" rel="noopener"><strong>云之彼端，约定的地方</strong></a></h4><pre><code>上映时间：2004年11月20日 开播 已完结, 全1话简介：在那个遥远的日子，他们许下了无法实现的约定。第二次世界大战以后，因对战争的不同思想，日本被分为南北两个地域来统治。在尤尼恩统治下的北海道被建立在一个谜一样的“巨塔”里，暗中进行某种计划。而在美军所占领的日本本州，还没有人知道那座塔的真实目的。从海峡中间望去，可以更加清楚地看见那里的“巨塔”。对“巨塔”一直抱有未知的憧憬和敬畏的青森县少年藤泽浩纪和白川拓也一直希望依靠自身的力量飞到“巨塔”上去，於是利用了军队留下的废品，在山里战后遗迹中组装了一驾小型飞机。同时对“巨塔”感兴趣的还有和他们同年纪也是共同喜欢的的女孩泽度佐由理，他们三人都觉得如果不去接触“巨塔”以后再也不知道什么时候才能接触它了。可这时佐由理却在中学三年级...角色声优：藤泽浩纪：吉冈秀隆白川拓也：萩原圣人泽渡佐由理：南里侑香冈部：石冢运升富泽常夫：井上和彦笠原真希：水野理纱</code></pre><h4 id="30angel-beats"><a class="markdownIt-Anchor" href="#30angel-beats"></a> 30.<a href="https://www.bilibili.com/bangumi/media/md959/" target="_blank" rel="noopener"><strong>Angel Beats!</strong></a></h4><pre><code>上映时间：2010年4月2日 开播 已完结, 全13话简介：故事从男主角死亡之后从“死后的世界”醒来开始，在“死后的世界”中的学校里，他与一位名为由利(ゆり)、在“死后的世界”率领着一个名为“死んだ(Shinda)世界(Sekai)战线(Sensen)”简称“SSS”的组织的少女相遇了。“SSS”成立的主要目的是与赐予他们生前悲哀命运的神以及神之使者——天使交战，在天使超乎常理的异能面前，“SSS”只能用枪来反抗。就这样一场发生在“死后的世界”的学校里的超能大战物语开始了……角色声优：音无结弦：神谷浩史仲村由理：櫻井浩美立华奏：花澤香菜直井文人：緒方恵美日向秀树：木村良平由依：喜多村英梨游佐：牧野由依音无初音：中原麻衣藤卷：増田裕生</code></pre><h4 id="31异界少女召唤术"><a class="markdownIt-Anchor" href="#31异界少女召唤术"></a> 31.<a href="https://www.bilibili.com/bangumi/media/md102752/" target="_blank" rel="noopener"><strong>异界少女召唤术</strong></a></h4><pre><code>上映时间：2018年7月5日 开播 已完结, 全12话简介：坂本拓真，MMORPG《十字幻想曲》中被其他玩家称为“魔王”，拥有压倒性的强悍力量。有一天，他竟然以游戏中的身份被召唤至异世界，遇到了两个各自都坚称自己才是“召唤主”的少女。两名少女对拓真施展了驯服召唤兽的奴隶法术，却因此启动了拓真的特殊能力“魔术反射”，从而变成奴隶的人反而是这两名少女！魔王（演技派）以绝对强大的力量勇闯异世界的冒险物语，开幕！</code></pre><h4 id="32妖精森林的小不点"><a class="markdownIt-Anchor" href="#32妖精森林的小不点"></a> 32.<a href="https://www.bilibili.com/bangumi/media/md11672/" target="_blank" rel="noopener"><strong>妖精森林的小不点</strong></a></h4><pre><code>上映时间：2018年1月12日 开播 已完结, 全13话简介：白明与御子地。住在绿意盎然的森林中的，两位小小的女孩子。在树洞里建造家、把树叶当做伞、坐在昆虫或鸟的背上……身高9厘米的话，这种事情也是能做得到的。不去悄悄地偷看一下吗？她们那安详而愉快，十分可爱的生活。角色声优：哈库梅伊：松田利冴蜜珂析：下地紫野康居：悠木碧千：安济知佳鰯：松风雅也</code></pre><h4 id="33工作细胞"><a class="markdownIt-Anchor" href="#33工作细胞"></a> 33.<a href="https://www.bilibili.com/bangumi/media/md102392/" target="_blank" rel="noopener"><strong>工作细胞</strong></a></h4><pre><code>上映时间：2018年7月8日 开播 已完结, 全14话简介：这是一个关于你自身的故事。你体内的故事——。人的细胞数量，约为37兆2千亿个。细胞们在名为身体的世界中，今天也精神满满、无休无眠地在工作着。运送着氧气的红细胞，与细菌战斗的白细胞……！这里，有着细胞们不为人知的故事。角色声优：红细胞：花泽香菜白细胞（中性粒细胞）：前野智昭杀伤性T细胞：小野大辅巨噬细胞：井上喜久子血小板：长绳麻理亚辅助性T细胞：樱井孝宏调节性T细胞：早见沙织树突状细胞：冈本信彦嗜酸性粒细胞：M·A·O记忆细胞：中村悠一肥大细胞：川澄绫子前辈红血球：远藤绫肺炎球菌：吉野</code></pre><h4 id="34漆黑的子弹"><a class="markdownIt-Anchor" href="#34漆黑的子弹"></a> 34.<a href="https://www.bilibili.com/bangumi/media/md4181/" target="_blank" rel="noopener"><strong>漆黑的子弹</strong></a></h4><pre><code>上映时间：2014年4月8日 开播 已完结, 全13话简介：西元二○二一年，人类在与病毒性寄生生物“原肠动物”的战争中败北，被驱逐至狭窄的领土，带着恐惧与绝望苟且偷生。至此过了十年，人类在能控制原肠动物病毒的少女们“受诅之子”力量下得以找到对抗怪物的最后希望，然而过去的伤痛却使两者之间出现难以填平的代沟，看似得到和平的人类社会正悄悄变质，暗潮越见汹涌。居住于东京的高中生少年里见莲太郎，是一位专门对抗原肠动物的“民警”中其中一份子，与自己的搭挡蓝原延珠一起从事许多危险的工作，就在某天接获政府的特别命令，内容竟是避免东京毁灭的高度机密任务……角色声优：里见莲太郎：梶裕貴蓝原延珠：日高里菜天童木更：堀江由衣布施翠：小倉唯蛭子影胤：小山力也蛭子小比奈：悠木碧室户堇：甲斐田裕子圣天子：豊崎愛生千寿夏世：潘めぐみ</code></pre><h4 id="35玲音"><a class="markdownIt-Anchor" href="#35玲音"></a> 35.<a href="https://www.bilibili.com/bangumi/media/md2251/" target="_blank" rel="noopener"><strong>玲音</strong></a></h4><pre><code>上映时间：1998年7月6日 开播 已完结, 全13话简介：现实和虚构搀杂的信息社会. 即使是自己的存在, 人们也失去了自信. 为了将由此产生的那份不安消除, 人们通过wired网络互相连络在一起, 就算这样做没有什么意义也还是...存在被定义为认识, 即是意识的连接, 所有的人, 都互相&quot;连接&quot;着. 而记忆只不过是记录. 在这种世界观下展开的, 是围绕着14岁的少女玲音(lain)的故事...角色声优：岩仓玲音：清水香里岩倉康男：大林隆介岩倉美香：川澄綾子岩倉美穂：五十嵐麗英利政美：速水奨</code></pre><h4 id="36笨拙之极的上野"><a class="markdownIt-Anchor" href="#36笨拙之极的上野"></a> 36.<a href="https://www.bilibili.com/bangumi/media/md4762714/" target="_blank" rel="noopener"><strong>笨拙之极的上野</strong></a></h4><pre><code>上映时间：2019年1月7日 开播 已完结, 全12话简介：作品以某中学的理科室为舞台，讲述了身为科学部部长的主人公上野，为了向自己喜欢的后辈田中传达出自己的心意，而使用各种自己的发明品进行超乎寻常的笨拙告白的内容。虽然上野的作战基本上都是以失败告终，但偶尔也能取得意外的进展。</code></pre><h4 id="37关于我转生变成史莱姆这档事"><a class="markdownIt-Anchor" href="#37关于我转生变成史莱姆这档事"></a> 37.<a href="https://www.bilibili.com/bangumi/media/md139252/" target="_blank" rel="noopener"><strong>关于我转生变成史莱姆这档事</strong></a></h4><pre><code>上映时间：2018年10月2日 开播 已完结, 全24话简介：史莱姆生活，开始了。上班族的三上悟在道路上被歹徒给刺杀身亡后，回过神来发现自己转生到了异世界。不过，自己居然是“史莱姆”！他在得到利姆鲁这个名字后开始了自己的史莱姆人生，随着与各个种族相处交流的过程中，他定下了一个目标——那就是“建立一个任何种族都能愉快地一起生活的国家”！角色声优:利姆鲁·特恩佩斯特：冈咲美保大贤者：丰口惠美维鲁德拉·特恩佩斯特：前野智昭井沢静江：花守由美里岚牙：小林亲弘红丸：古川慎朱菜：千本木彩花紫苑：M・A・O苍影：江口拓也白老：大塚芳忠三上悟：寺岛拓笃希兹：花守由美里利古鲁德：山本兼平利古鲁：石谷春贵哥布塔：泊明日菜凯金：斧敦托蕾妮：田中理惠艾莲：熊田茜音卡巴尔：高梨谦吾米莉姆：日高里菜</code></pre><h4 id="38同居人是猫"><a class="markdownIt-Anchor" href="#38同居人是猫"></a> 38.<a href="https://www.bilibili.com/bangumi/media/md4762694" target="_blank" rel="noopener"><strong>同居人是猫</strong></a></h4><pre><code>上映时间：2019年1月10日 开播 已完结, 全12话简介：不擅长跟人接触，怕生的小说家·朏素晴与被人抛弃，过着残酷的流浪生活的猫。由于偶然的契机下一个人和一只猫开始了同居生活……？以人的视角和猫的视角来描绘每天的生活，各自的思绪互相交织在一起。故事以“温暖人心”为话题。随着琐碎时光的积累，我们成为了“家人”——两者找到了幸福的同居生活。</code></pre><h4 id="39辉夜大小姐想让我告白天才们的恋爱头脑战"><a class="markdownIt-Anchor" href="#39辉夜大小姐想让我告白天才们的恋爱头脑战"></a> 39.<a href="https://www.bilibili.com/bangumi/media/md5267730/" target="_blank" rel="noopener"><strong>辉夜大小姐想让我告白<sub>天才们的恋爱头脑战</sub></strong></a></h4><pre><code>上映时间:2019年1月13日 开播 已完结, 全12话简介：家庭背景与人品都很棒！！一大群有前途的秀才所聚集的秀知院学园！！在那里的学生会相遇的副会长·四宫辉夜与会长·白银御行原本应该是彼此受到了对方吸引…但想不到都过半年了却仍然什么事情也没发生！！最麻烦的是这两个自尊心超强、无法坦率的家伙，居然开始想着要“设法让对方向自己告白”！？直到恋情有下落之前会很欢乐的故事！！新感觉“斗智”爱情喜剧、就此开战！！</code></pre><h4 id="40骑士魔法"><a class="markdownIt-Anchor" href="#40骑士魔法"></a> 40.<a href="https://www.bilibili.com/bangumi/media/md6304/" target="_blank" rel="noopener"><strong>骑士&amp;魔法</strong></a></h4><pre><code>上映时间：2017年7月2日 开播 已完结, 全13话简介：能干的程序员，同时是重度机器人宅的青年，转生到了巨大机器人“幻晶骑士（Silhouette Knight）”震动大地的骑士与魔法的异世界！？以艾尔涅斯帝·埃切贝里亚的身份转生的他，活用丰富的机械知识以及身为程序员的才能，开始制造理想的机器人。但，他的行动演变成了超出预期的事态……！?机器人宅的野望，将改变异世界！！</code></pre>]]></content>
      
      
      <categories>
          
          <category> ACG </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 番剧 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>那些年我追过的滑稽【1-20】</title>
      <link href="/2019/05/18/%E7%95%AA%E5%89%A7%E5%BD%92%E6%A1%A31_20/"/>
      <url>/2019/05/18/%E7%95%AA%E5%89%A7%E5%BD%92%E6%A1%A31_20/</url>
      
        <content type="html"><![CDATA[<h4 id="1我们仍未知道那天所看见的花的名字"><a class="markdownIt-Anchor" href="#1我们仍未知道那天所看见的花的名字"></a> 1.<a href="https://www.bilibili.com/bangumi/media/md835/" target="_blank" rel="noopener"><strong>我们仍未知道那天所看见的花的名字。</strong></a></h4><pre><code>上映时间：2011年4月14日 开播 已完结, 全11话  角色声优：  本间芽衣子：茅野爱衣  宿海仁太：入野自由  安城鸣子：户松遥  松雪集：樱井孝宏  鹤见知利子：早见沙织  久川铁道：近藤孝行  STAFF：  脚本：冈田麿里  监督：长井龙雪  分镜·演出：长井龙雪、伊藤智彦、吉村爱、篠原俊哉  人物设定： 田中将贺  原画： 松本宪生、冷水由紀絵、新井伸浩、阿部望、中村直人  色彩设计： 中岛和子  总作画监督： 田中将贺  作画监督： 冈崎洋美、须藤智子、山本笃史  音响监督： 明田川仁  剪辑： 西山茂  音乐制作： Aniplex、フジパシフィック音楽出版  动画制作： A-1 Pictures  </code></pre><h4 id="2-灼眼的夏娜"><a class="markdownIt-Anchor" href="#2-灼眼的夏娜"></a> 2. <a href="https://www.bilibili.com/bangumi/media/md1600" target="_blank" rel="noopener"><strong>灼眼的夏娜</strong></a></h4><pre><code>上映时间：2005年10月5日 开播 已完结, 全3季  角色声优：  夏娜：釘宮理恵  威尔艾米娜·卡梅尔：伊藤静  玛琼琳·朵：生天目仁美  吉田一美：川澄綾子  坂井悠二：日野聡  修德南：三宅健太  平井缘：浅野真澄  坂井贯太郎：藤原啓治  中村公子：藤村歩  STAFF：  原作：高桥弥七郎、伊东杂音、高橋弥七郎、畑博之  监督：渡部高志  脚本：小林靖子  分镜：米たにヨシトモ、渡部高志、福田道生  演出：秋田谷典昭、高島大輔  人物原案：いとうのいぢ  人物设定：大塚舞  系列构成：小林靖子  色彩设计：伊藤由紀子  作画监督：大冢舞、藤井昌宏、住本悦子、冷水由紀絵、武本大介、岡野幸男  音乐：大谷幸  音响监督：明田川仁  摄影监督：福世晋吾  动画制作：J.C.STAFF  </code></pre><h4 id="3-某科学的超电磁炮"><a class="markdownIt-Anchor" href="#3-某科学的超电磁炮"></a> 3. <a href="https://www.bilibili.com/bangumi/media/md425" target="_blank" rel="noopener"><strong>某科学的超电磁炮</strong></a></h4><pre><code>上映时间：2009年10月2日 开播 已完结, 全2季  角色声优：  御坂美琴：佐藤利奈  白井黑子：新井里美  初春饰利：豊崎愛生  佐天泪子：伊藤加奈惠  春上衿衣：花澤香菜  婚后光子：寿美菜子  湾内绢保：戸松遥  泡浮万彬：南條愛乃  木山春生：田中敦子  STAFF：  原作：镰池和马、冬川基  导演：长井龙雪  人物设定：田中雄一  系列构成：水上清资  道具设计：阿部望  美术监督： 黑天友范、黒田友範  色彩设计： 安藤智美  总作画监督： 飯塚晴子、木本茂樹、下谷智之、松下郁子、中村直人作画监督： 高瀬健一、阿部望、木本茂樹、神本兼利、松下郁子、中村直人、田中春香  摄影监督： 福世晋吾  原画： 高瀬健一、阿部望、荒木哲郎、滝本祥子、三浦貴博、まじろ、伊東葉子、神本兼利、中村直人  剪辑： 西山茂  色彩设计：安藤智美  摄影监督：福世晋吾  编辑：西山茂（REAL-T）  音响监督：明田川仁  音响制作：hotfrog  音乐：I've sound/井内舞子  动画制作：J.C.STAFF  制作：PROJECT-RAILGUN（Geneon Universal Entertainment、ASCII Media Works、J.C.STAFF、AT-X、Movic）  </code></pre><h4 id="4-一人之下"><a class="markdownIt-Anchor" href="#4-一人之下"></a> 4. <a href="https://www.bilibili.com/bangumi/media/md5050/" target="_blank" rel="noopener"><strong>一人之下</strong></a></h4><pre><code>上映时间：2016年7月8日 开播 已完结, 全2季</code></pre><h4 id="5-冰菓未看"><a class="markdownIt-Anchor" href="#5-冰菓未看"></a> 5. <a href="https://www.bilibili.com/bangumi/media/md3398/" target="_blank" rel="noopener"><strong>冰菓</strong></a>[未看]</h4><pre><code>上映时间：2012年4月22日 开播 已完结, 全22话</code></pre><h4 id="6-告白实行委员会-系列"><a class="markdownIt-Anchor" href="#6-告白实行委员会-系列"></a> 6. <a href="https://search.bilibili.com/bangumi?keyword=%E5%91%8A%E7%99%BD%E5%AE%9E%E8%A1%8C%E5%A7%94%E5%91%98%E4%BC%9A" target="_blank" rel="noopener"><strong>告白实行委员会 系列</strong></a></h4><h4 id="7-我是江小白"><a class="markdownIt-Anchor" href="#7-我是江小白"></a> 7. <a href="https://www.bilibili.com/bangumi/media/md6064/" target="_blank" rel="noopener"><strong>我是江小白</strong></a></h4><pre><code>上映时间：2017年11月9日 开播 已完结, 全2季</code></pre><h4 id="8-埃罗芒阿老师"><a class="markdownIt-Anchor" href="#8-埃罗芒阿老师"></a> 8. <a href="https://www.bilibili.com/bangumi/media/md5997/" target="_blank" rel="noopener"><strong>埃罗芒阿老师</strong></a></h4><pre><code>上映时间：2017年4月9日 开播 已完结, 全12话  角色声优：  和泉正宗：松岡禎丞  和泉纱雾：藤田茜  山田精灵：高橋未奈美  千寿村征：大西沙織  神野恵：木戸衣吹  高砂智惠：石川由依  </code></pre><h4 id="9-just-because"><a class="markdownIt-Anchor" href="#9-just-because"></a> 9. <a href="https://www.bilibili.com/bangumi/media/md6427/" target="_blank" rel="noopener"><strong>Just Because!</strong></a></h4><pre><code>上映时间：2017年10月6日 开播 已完结, 全12话</code></pre><h4 id="10-切尔诺贝利之春"><a class="markdownIt-Anchor" href="#10-切尔诺贝利之春"></a> 10. <a href="https://www.bilibili.com/bangumi/media/md86732/" target="_blank" rel="noopener"><strong>切尔诺贝利之春</strong></a></h4><pre><code>上映时间：2018年4月26日 开播 已完结, 全1话</code></pre><h4 id="11-caligula-卡里古拉"><a class="markdownIt-Anchor" href="#11-caligula-卡里古拉"></a> 11. <a href="https://www.bilibili.com/bangumi/media/md77552/" target="_blank" rel="noopener"><strong>Caligula 卡里古拉</strong></a></h4><pre><code>上映时间：2018年4月8日 开播 已完结, 全12话</code></pre><h4 id="12-加速世界"><a class="markdownIt-Anchor" href="#12-加速世界"></a> 12. <a href="https://www.bilibili.com/bangumi/media/md686/" target="_blank" rel="noopener"><strong>加速世界</strong></a></h4><pre><code>上映时间：2012年4月6日 开播 已完结, 全24话</code></pre><h4 id="13-樱花庄的宠物女孩"><a class="markdownIt-Anchor" href="#13-樱花庄的宠物女孩"></a> 13. <a href="https://www.bilibili.com/bangumi/media/md687/" target="_blank" rel="noopener"><strong>樱花庄的宠物女孩</strong></a></h4><pre><code>上映时间：2012年10月8日 开播 已完结, 全24话</code></pre><h4 id="14-春原庄的管理人小姐"><a class="markdownIt-Anchor" href="#14-春原庄的管理人小姐"></a> 14. <a href="https://www.bilibili.com/bangumi/play/ss24583/" target="_blank" rel="noopener"><strong>春原庄的管理人小姐</strong></a></h4><pre><code>上映时间：2018年7月5日 开播 已完结, 全12话  角色声优：  春原彩花：佐藤利奈  椎名亚树：喜多村英梨  雪本柚子：高森奈津美  月见里堇：濑户麻沙美  风见百合：宫本侑芽  春原菜菜：佐仓绫音  内藤莓爱：长妻树里  小薗井舞子：中岛爱  八穗锦：伊藤静  椎名茉莉：茅野爱衣  </code></pre><h4 id="15-电波女与青春男"><a class="markdownIt-Anchor" href="#15-电波女与青春男"></a> 15. <a href="https://www.bilibili.com/bangumi/media/md846/" target="_blank" rel="noopener"><strong>电波女与青春男</strong></a></h4><pre><code>上映时间：2011年4月14日 开播 已完结, 全13话  角色声优：  藤和女女：野中藍  前川同学：渕上舞  御船流子：加藤英美里  藤和艾莉欧：大亀あすか  丹羽真：入野自由  花泽：花澤香菜  星宫社：井口裕香  STAFF:  脚本：綾奈ゆにこ  原作：入間人間  分镜：畠山守、杉山延寛、笹木信作、高橋知也、八瀬祐樹、板村智幸、平川哲生  演出：間島崇寛、八瀬祐樹、畠山守、板村智幸、川畑喬、向井雅浩、下田久人  音乐：Franz Maxwell I.（藤澤慶昌（F）、前山田健一（M）、板垣祐介（I））  人物原案：ブリキ  人物设定：西田亜沙子  系列构成：綾奈ゆにこ  色彩设计：日比野仁  总作画监督：たむらかずひこ、杉山延寛、西田亜沙子  作画监督：矢向宏志、松本元気  </code></pre><h4 id="16-星之梦"><a class="markdownIt-Anchor" href="#16-星之梦"></a> 16. <a href="https://www.bilibili.com/bangumi/media/md5045/" target="_blank" rel="noopener"><strong>星之梦</strong></a></h4><pre><code>上映时间：2016年7月7日 开播 已完结, 全5话  角色声优：  星野梦美：铃木惠子  屑屋：小野大辅  STAFF：  原作：Key  监督：津田尚克  剧本：安川正吾、津田尚克  系列监督：中山胜一、町谷俊辅  原作协力：Key/Visual Art's  角色原案：驹都英二  角色设计：竹知仁美  机械设计：海老川兼武  道具设计：内田信也  美术设定：泉宽  色彩设计：佐藤裕子  美术监督：竹田悠介、杉山祐子  3D监督：长泽洋二  摄影监督：渡边有正  编集：广濑清志  音响监督：山口贵之、津田尚克  音响效果：小山恭正  音乐：Visual Art's（折户伸治、どんまる、竹下智博）  动画制作：david production  制作：plan[5]  摄影监督辅佐： 大岛慧治  摄影：渡边有正、大岛慧治  特效：石桥 启  取材协力：明石市立天文博物馆  制作协力： アストロアーツ  录音助手：川和浩之  </code></pre><h4 id="17-我女友与青梅竹马的惨烈修罗场"><a class="markdownIt-Anchor" href="#17-我女友与青梅竹马的惨烈修罗场"></a> 17. <a href="https://www.bilibili.com/bangumi/media/md2667/" target="_blank" rel="noopener"><strong>我女友与青梅竹马的惨烈修罗场</strong></a></h4><pre><code>上映时间：2013年1月5日 开播 已完结, 全13话</code></pre><h4 id="18-徒然喜欢你"><a class="markdownIt-Anchor" href="#18-徒然喜欢你"></a> 18. <a href="https://www.bilibili.com/bangumi/media/md6312/" target="_blank" rel="noopener"><strong>徒然喜欢你</strong></a></h4><pre><code>上映时间：2017年7月4日 开播 已完结, 全12话</code></pre><h4 id="19-宝石之国"><a class="markdownIt-Anchor" href="#19-宝石之国"></a> 19. <a href="https://www.bilibili.com/bangumi/media/md6434/" target="_blank" rel="noopener"><strong>宝石之国</strong></a></h4><pre><code>上映时间：2017年10月7日 开播 已完结, 全12话</code></pre><h4 id="20-overlord"><a class="markdownIt-Anchor" href="#20-overlord"></a> 20. <a href="https://www.bilibili.com/bangumi/media/md2576" target="_blank" rel="noopener"><strong>OVERLORD</strong></a></h4><pre><code>上映时间：2015年7月7日 开播 已完结, 全3季节 [期待下一季]  角色声优：  飞鼠：日野聪  雅儿贝德：原由实  夏提雅·布拉德弗伦：上坂堇  亚乌菈·贝拉·菲欧拉：加藤英美里  马雷·贝罗·菲欧雷：内山夕实  迪米乌哥斯：加藤将之  科塞特斯：三宅健太  塞巴斯·蒂安：千叶繁  娜贝拉尔：沼仓爱美  STAFF：  监督：伊藤尚往  脚本：菅原雪絵  分镜：小野学、伊藤尚往、川尻善昭、松村政輝  演出：伊藤尚往、松村政輝、山口美浩、倉谷涼一  人物设定：大久保淳二、吉松孝博  系列构成：菅原雪絵  美术监督：池田繁美、丸山由紀子  色彩设计：野口幸恵  道具设计： 大久保淳二  总作画监督：吉松孝博  音乐：片山修志  摄影监督： 川下裕樹  剪辑： 木村佳史子  动画制作：MADHOUSE</code></pre>]]></content>
      
      
      <categories>
          
          <category> ACG </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 番剧 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
